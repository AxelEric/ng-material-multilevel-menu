{"version":3,"sources":["../../../projects/ng-material-multilevel-menu/src/lib/app.model.ts","../../../projects/ng-material-multilevel-menu/src/lib/constants.ts","../../../projects/ng-material-multilevel-menu/src/lib/multilevel-menu.service.ts","../../projects/ng-material-multilevel-menu/src/lib/list-item/list-item.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/materials.module.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.module.ts"],"names":["ExpandCollapseStatusEnum","CONSTANT","MultilevelMenuService","this","expandCollapseStatus","Subject","expandCollapseStatus$","asObservable","selectedMenuID","selectedMenuID$","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","forEach","node","id","undefined","items","recursiveCheckId","nodeId","some","nestedNode","findNodeRecursively","_a","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","getMatchedObjectById","console","log","kvDummyComparerFn","setMenuExapandCollpaseStatus","status","next","neutral","selectMenuByID","menuID","ListItemComponent","router","multilevelMenuService","level","submenuLevel","nodeConfiguration","nodeExpandCollapseStatus","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","selectedListClasses","ngOnChanges","nodeChildren","filter","n","hidden","selectedNode","setSelectedClass","setExpandCollapseStatus","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","getListStyle","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","getHrefTargetType","hrefTargetType","hasItems","isRtlLayout","rtlLayout","classes","expand","collapse","interfaceWithRoute","navigate","navigationExtras","onSelected","selectedListItem","emit","Component","args","selector","template","animations","trigger","state","style","height","opacity","transition","group","animate","transform","Router","Input","Output","NgModule","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","NgMaterialMultilevelMenuComponent","configuration","selectedLabel","expandCollapseStatusSubscription","selectMenuByIDSubscription","nodeConfig","useDividers","isInvalidConfig","detectInvalidConfig","initExpandCollapseStatus","initSelectedMenuID","events","subscribe","event","NavigationEnd","updateNodeByURL","urlAfterRedirects","url","foundNode","currentNode","dontEmit","checkValidData","warn","config","getClassName","classname","getGlobalStyle","backgroundColor","ngOnDestroy","unsubscribe","CommonModule","MaterialsModule","RouterModule"],"mappings":"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","sourcesContent":["import { NavigationExtras } from '@angular/router';\n\nexport interface MultilevelNodes {\n  id?: string;\n  label: string;\n  faIcon?: string;\n  icon?: string;\n  imageIcon?: string;\n  svgIcon?: string;\n  activeFaIcon?: string;\n  activeIcon?: string;\n  activeImageIcon?: string;\n  activeSvgIcon?: string;\n  hidden?: boolean;\n  link?: string;\n  externalRedirect?: boolean;\n  hrefTargetType?: string;\n  data?: any;\n  items?: MultilevelNodes[];\n  onSelected?: Function;\n  disabled?: boolean;\n  expanded?: boolean;\n  navigationExtras?: NavigationExtras;\n  dontEmit?: boolean;\n}\n\nexport interface Configuration {\n    classname?: string;\n    paddingAtStart?: boolean;\n    backgroundColor?: string;\n    listBackgroundColor?: string;\n    fontColor?: string;\n    selectedListFontColor?: string;\n    interfaceWithRoute?: boolean;\n    collapseOnSelect?: boolean;\n    highlightOnSelect?: boolean;\n    useDividers?: boolean;\n    rtlLayout?: boolean;\n}\n\nexport interface BackgroundStyle {\n    background: string;\n}\n\nexport interface ListStyle {\n    background: string;\n    color: string;\n}\n\nexport enum ExpandCollapseStatusEnum {\n    expand = 'expand',\n    collapse = 'collapse',\n    neutral = 'neutral',\n}\n","export const CONSTANT = {\n    PADDING_AT_START: true,\n    DEFAULT_CLASS_NAME: `amml-container`,\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\n    DEFAULT_HREF_TARGET_TYPE: '_self',\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\n};\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\nexport class MultilevelMenuService {\n  foundLinkObject: MultilevelNodes;\n  expandCollapseStatus: Subject<ExpandCollapseStatusEnum> = new Subject<ExpandCollapseStatusEnum>();\n  expandCollapseStatus$: Observable<ExpandCollapseStatusEnum> = this.expandCollapseStatus.asObservable();\n\n  selectedMenuID: Subject<string> = new Subject<string>();\n  selectedMenuID$: Observable<string> = this.selectedMenuID.asObservable();\n\n  private generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  private findNodeRecursively({nodes, link, id}: {nodes: MultilevelNodes[], link?: string, id?: string}): void {\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\n      const node = nodes[nodeIndex];\n      for (const key in node) {\n        if (node.hasOwnProperty(key)) {\n          if (encodeURI(node.link) === link) {\n            this.foundLinkObject = node;\n          } else if (node.id === id) {\n            this.foundLinkObject = node;\n          } else {\n            if (node.items !== undefined) {\n              this.findNodeRecursively({\n                nodes: node.items,\n                link: link? link: null,\n                id: id? id: null\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n  getMatchedObjectByUrl(nodes: MultilevelNodes[], link: string): MultilevelNodes {\n    this.findNodeRecursively({nodes, link});\n    return this.foundLinkObject;\n  }\n  getMatchedObjectById(nodes: MultilevelNodes[], id: string): MultilevelNodes {\n    console.log(nodes, id)\n    this.findNodeRecursively({nodes, id});\n    return this.foundLinkObject;\n  }\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\n  // https://angular.io/api/common/KeyValuePipe#description\n  kvDummyComparerFn() {\n    return 0;\n  }\n  setMenuExapandCollpaseStatus(status: ExpandCollapseStatusEnum): void {\n    this.expandCollapseStatus.next(status ? status : ExpandCollapseStatusEnum.neutral);\n  }\n  selectMenuByID(menuID: string) {\n    this.selectedMenuID.next(menuID);\n    return this.foundLinkObject;\n  }\n}\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Configuration, ListStyle, MultilevelNodes, ExpandCollapseStatusEnum } from './../app.model';\nimport { CONSTANT } from './../constants';\nimport { MultilevelMenuService } from './../multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({ height: '*', opacity: 0 })),\n      transition(':leave', [\n        style({ height: '*', opacity: 0.2 }),\n        group([\n          animate(200, style({ height: 0 })),\n          animate('200ms ease-out', style({ opacity: 0 }))\n        ])\n      ]),\n      transition(':enter', [\n        style({ height: '0', opacity: 0 }),\n        group([\n          animate(200, style({ height: '*' })),\n          animate('400ms ease-out', style({ opacity: 1 }))\n        ])\n      ])\n    ]),\n    trigger('isExpandedLTR', [\n      state('no', style({ transform: 'rotate(-90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ]),\n    trigger('isExpandedRTL', [\n      state('no', style({ transform: 'rotate(90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ])\n  ]\n})\nexport class ListItemComponent implements OnChanges, OnInit {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() submenuLevel = 0;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Input() nodeExpandCollapseStatus: ExpandCollapseStatusEnum = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  isSelected = false;\n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  expanded = false;\n  firstInitializer = false;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\n    }\n    this.setExpandCollapseStatus();\n  }\n  ngOnInit() {\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\n\n    if (this.node.faIcon !== null &&\n      this.node.faIcon !== undefined &&\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\n      this.node.faIcon = `fas ${this.node.faIcon}`;\n    }\n\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\n    if (typeof this.node.expanded === 'boolean') {\n      this.expanded = this.node.expanded;\n    }\n    this.setClasses();\n  }\n  setSelectedClass(isFound: boolean): void {\n    if (isFound) {\n      if (!this.firstInitializer) {\n        this.expanded = true;\n      }\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\n    } else {\n      this.isSelected = false;\n      if (this.nodeConfiguration.collapseOnSelect) {\n        this.expanded = false;\n      }\n    }\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\n    };\n    this.setClasses();\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  getListIcon(node: MultilevelNodes): string {\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\n      return `icon`;\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\n      return `faicon`;\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\n      return `imageicon`;\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\n      return `svgicon`;\n    } else {\n      return ``;\n    }\n  }\n  getSelectedSvgIcon() {\n    if (this.isSelected && this.node.activeSvgIcon) {\n      return this.node.activeSvgIcon;\n    }\n    return this.node.svgIcon;\n  }\n  getSelectedIcon() {\n    if (this.isSelected && this.node.activeIcon) {\n      return this.node.activeIcon;\n    }\n    return this.node.icon;\n  }\n  getSelectedFaIcon() {\n    if (this.isSelected && this.node.activeFaIcon) {\n      return this.node.activeFaIcon;\n    }\n    return this.node.faIcon;\n  }\n  getSelectedImageIcon() {\n    if (this.isSelected && this.node.activeImageIcon) {\n      return this.node.activeImageIcon;\n    }\n    return this.node.imageIcon;\n  }\n  getHrefTargetType() {\n    if (this.node.hrefTargetType) {\n      return this.node.hrefTargetType;\n    }\n    return CONSTANT.DEFAULT_HREF_TARGET_TYPE;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfiguration.rtlLayout;\n  }\n  setClasses(): void {\n    this.classes = {\n      [`level-${this.level + 1}`]: true,\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\n    };\n  }\n  setExpandCollapseStatus(): void {\n    if (this.nodeExpandCollapseStatus !== null && this.nodeExpandCollapseStatus !== undefined ) {\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.expand) {\n        this.expanded = true;\n      }\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.collapse) {\n        this.expanded = false;\n      }\n    }\n  }\n  expand(node: MultilevelNodes): void {\n    if (node.disabled) {\n      return;\n    }\n    this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    this.expanded = !this.expanded;\n    this.firstInitializer = true;\n    this.setClasses();\n    if (this.nodeConfiguration.interfaceWithRoute !== null\n      && this.nodeConfiguration.interfaceWithRoute\n      && node.link !== undefined\n      && node.link\n    ) {\n      this.router.navigate([node.link], node.navigationExtras);\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\n      node.onSelected(node);\n      this.selectedListItem(node);\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\n      this.selectedListItem(node);\n    }\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ],\n  declarations: [],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ]\n})\nexport class MaterialsModule { }\n","import { Component, EventEmitter, Input, OnChanges, OnInit, OnDestroy, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { BackgroundStyle, Configuration, MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\nimport { CONSTANT } from './constants';\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  templateUrl: './ng-material-multilevel-menu.component.html',\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\n  expandCollapseStatusSubscription: Subscription = null;\n  selectMenuByIDSubscription: Subscription = null;\n  currentNode: MultilevelNodes;\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null,\n    interfaceWithRoute: null,\n    collapseOnSelect: null,\n    highlightOnSelect: false,\n    useDividers: true,\n    rtlLayout: false,\n  };\n  isInvalidConfig = true;\n  nodeExpandCollapseStatus: ExpandCollapseStatusEnum = ExpandCollapseStatusEnum.neutral;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnChanges() {\n    this.detectInvalidConfig();\n    this.initExpandCollapseStatus();\n    this.initSelectedMenuID();\n  }\n  ngOnInit() {\n    if (\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\n      this.router.events\n        .subscribe((event) => {\n          if (event instanceof NavigationEnd) {\n            this.updateNodeByURL(event.urlAfterRedirects);\n          }\n        });\n      this.updateNodeByURL(this.router.url);\n    }\n  }\n  updateNodeByURL(url: string): void {\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\n    if (\n      foundNode !== undefined &&\n      foundNode.link !== undefined &&\n      foundNode.link !== null &&\n      foundNode.link !== ''\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\n    ) {\n      this.currentNode = foundNode;\n      if(foundNode.dontEmit !== undefined && foundNode.dontEmit !== null && !foundNode.dontEmit) {\n        this.selectedListItem(foundNode);\n      }\n    }\n  }\n  checkValidData(): void {\n    if (this.items.length === 0) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n      if (config.interfaceWithRoute !== null &&\n        config.interfaceWithRoute !== undefined &&\n        typeof config.interfaceWithRoute === 'boolean') {\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\n      }\n      if (config.collapseOnSelect !== null &&\n        config.collapseOnSelect !== undefined &&\n        typeof config.collapseOnSelect === 'boolean') {\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\n      }\n      if (config.highlightOnSelect !== null &&\n        config.highlightOnSelect !== undefined &&\n        typeof config.highlightOnSelect === 'boolean') {\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\n      }\n      if (config.useDividers !== null &&\n        config.useDividers !== undefined &&\n        typeof config.useDividers === 'boolean') {\n        this.nodeConfig.useDividers = config.useDividers;\n      }\n      if (config.rtlLayout !== null &&\n        config.rtlLayout !== undefined &&\n        typeof config.rtlLayout === 'boolean') {\n        this.nodeConfig.rtlLayout = config.rtlLayout;\n      }\n    }\n    this.checkValidData();\n  }\n  initExpandCollapseStatus(): void {\n    this.expandCollapseStatusSubscription = this.multilevelMenuService.expandCollapseStatus$.subscribe( (expandCollapseStatus: ExpandCollapseStatusEnum) => {\n      this.nodeExpandCollapseStatus = expandCollapseStatus ? expandCollapseStatus : ExpandCollapseStatusEnum.neutral;\n    }, () => {\n      this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    });\n  }\n  initSelectedMenuID(): void {\n    this.selectMenuByIDSubscription = this.multilevelMenuService.selectedMenuID$.subscribe( (selectedMenuID: string) => {\n      if(selectedMenuID) {\n        const foundNode = this.multilevelMenuService.getMatchedObjectById(this.items, selectedMenuID);\n        console.log(selectedMenuID, foundNode)\n        if (foundNode !== undefined) {\n          this.currentNode = foundNode;\n          // this.selectedListItem(foundNode);\n        }\n      }\n    });\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfig.rtlLayout;\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    this.currentNode = event;\n    if(event.dontEmit !== undefined && event.dontEmit !== null && event.dontEmit) {\n      return;\n    }\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\n      this.selectedItem.emit(event);\n    } else {\n      this.selectedLabel.emit(event);\n    }\n  }\n  ngOnDestroy() {\n    this.expandCollapseStatusSubscription.unsubscribe();\n    this.selectMenuByIDSubscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { MaterialsModule } from './materials.module';\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    RouterModule,\n  ],\n  declarations: [\n    NgMaterialMultilevelMenuComponent,\n    ListItemComponent,\n  ],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule {}\n"]}