{"version":3,"sources":["../../../projects/ng-material-multilevel-menu/src/lib/app.model.ts","../../../projects/ng-material-multilevel-menu/src/lib/constants.ts","../../../projects/ng-material-multilevel-menu/src/lib/multilevel-menu.service.ts","../../projects/ng-material-multilevel-menu/src/lib/list-item/list-item.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/materials.module.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.module.ts"],"names":["ExpandCollapseStatusEnum","CONSTANT","MultilevelMenuService","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","this","forEach","node","id","undefined","items","recursiveCheckId","nodeId","some","nestedNode","recursiveCheckLink","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","kvDummyComparerFn","Injectable","args","providedIn","ListItemComponent","router","multilevelMenuService","level","submenuLevel","nodeConfiguration","nodeExpandCollapseStatus","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","selectedListClasses","_a","ngOnChanges","nodeChildren","filter","n","hidden","selectedNode","setSelectedClass","setExpandCollapseStatus","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","getListStyle","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","getHrefTargetType","hrefTargetType","hasItems","isRtlLayout","rtlLayout","classes","expand","collapse","interfaceWithRoute","navigate","navigationExtras","onSelected","selectedListItem","emit","Component","selector","template","animations","trigger","state","style","height","opacity","transition","group","animate","transform","Router","Input","Output","NgModule","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","NgMaterialMultilevelMenuComponent","configuration","expandCollapseStatus","selectedLabel","nodeConfig","useDividers","isInvalidConfig","detectInvalidConfig","detectExpandCollapseStatus","events","subscribe","event","NavigationEnd","updateNodeByURL","urlAfterRedirects","url","foundNode","currentNode","checkValidData","console","warn","config","getClassName","classname","getGlobalStyle","backgroundColor","CommonModule","MaterialsModule","RouterModule"],"mappings":"swBAgDA,IAAYA,GAAAA,EAAAA,EAAAA,2BAAAA,EAAAA,yBAAwB,KAChC,OAAA,SACAA,EAAA,SAAA,WClDG,IAAMC,EAEW,iBAFXA,EAGgB,YAHhBA,EAIiB,qBAJjBA,EAKe,mBALfA,EAMiB,qBANjBA,EAOoB,UAPpBA,EAQsB,cARtBA,EASgB,kBAThBA,EAUiB,QAVjBA,EAWM,mECLnB,SAAAC,YAEEA,EAAAC,UAAAC,WAAA,WAGE,IAFA,IAAIC,EAAO,GACLC,EAAW,iEACRC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASM,SAE9D,OAAOP,GAETH,EAAAC,UAAAU,YAAA,SAAYC,GAAZ,IAAAC,EAAAC,KACEF,EAAMG,SAAQ,SAACC,GACbA,EAAKC,GAAKJ,EAAKX,kBACIgB,IAAfF,EAAKG,OACPN,EAAKF,YAAYK,EAAKG,WAI5BnB,EAAAC,UAAAmB,iBAAA,SAAiBJ,EAAuBK,GAAxC,IAAAR,EAAAC,KACE,OAAIE,EAAKC,KAAOI,SAGKH,IAAfF,EAAKG,MACAH,EAAKG,MAAMG,MAAK,SAACC,GACtB,OAAOV,EAAKO,iBAAiBG,EAAYF,WAF7C,IAOJrB,EAAAC,UAAAuB,mBAAA,SAAmBZ,EAA0Ba,GAC3C,IAAK,IAAIC,EAAY,EAAGA,EAAYd,EAAMF,OAAQgB,IAAa,CAC7D,IAAMV,EAAOJ,EAAMc,GACnB,IAAK,IAAMC,KAAOX,EACZA,EAAKY,eAAeD,KAClBE,UAAUb,EAAKS,QAAUA,EAC3BX,KAAKgB,gBAAkBd,OAEJE,IAAfF,EAAKG,OACPL,KAAKU,mBAAmBR,EAAKG,MAAOM,MAOhDzB,EAAAC,UAAA8B,sBAAA,SAAsBf,EAAyBS,GAE7C,OADAX,KAAKU,mBAAmBR,EAAMS,GACvBX,KAAKgB,iBAId9B,EAAAC,UAAA+B,kBAAA,WACE,OAAO,uHAvDVC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,4BCiEZ,SAAAC,EACUC,EACDC,SADCxB,KAAAuB,OAAAA,EACDvB,KAAAwB,sBAAAA,EAdAxB,KAAAyB,MAAQ,EACRzB,KAAA0B,aAAe,EAEf1B,KAAA2B,kBAAmC,KACnC3B,KAAA4B,yBAAqD,KACpD5B,KAAA6B,aAAe,IAAIC,EAAAA,aAC7B9B,KAAA+B,YAAa,EAIb/B,KAAAgC,UAAW,EACXhC,KAAAiC,kBAAmB,EAKjBjC,KAAKkC,sBAAmBC,EAAA,IACrBlD,IAAmC,EACpCkD,EAAClD,IAAoC,EACrCkD,EAAClD,IAAkC,YAGvCqC,EAAAnC,UAAAiD,YAAA,WACEpC,KAAKqC,aAAerC,KAAKE,MAAQF,KAAKE,KAAKG,MAAQL,KAAKE,KAAKG,MAAMiC,QAAO,SAAAC,GAAK,OAACA,EAAEC,UAAU,QAClEpC,IAAtBJ,KAAKyC,cAAoD,OAAtBzC,KAAKyC,cAC1CzC,KAAK0C,iBAAiB1C,KAAKwB,sBAAsBlB,iBAAiBN,KAAKE,KAAMF,KAAKyC,aAAatC,KAEjGH,KAAK2C,2BAEPrB,EAAAnC,UAAAyD,SAAA,WACE5C,KAAKkC,oBAAoBjD,GAAqCe,KAAKE,KAAK2C,SAE/C,OAArB7C,KAAKE,KAAK4C,aACS1C,IAArBJ,KAAKE,KAAK4C,QACgC,OAA1C9C,KAAKE,KAAK4C,OAAOC,MAAM,iBACvB/C,KAAKE,KAAK4C,OAAS,OAAO9C,KAAKE,KAAK4C,QAGtC9C,KAAKkC,oBAAoB,SAASlC,KAAKyB,MAAK,iBAAiBzB,KAAK0B,eAAkB,EAClD,kBAAvB1B,KAAKE,KAAK8B,WACnBhC,KAAKgC,SAAWhC,KAAKE,KAAK8B,UAE5BhC,KAAKgD,cAEP1B,EAAAnC,UAAAuD,iBAAA,SAAiBO,SACXA,GACGjD,KAAKiC,mBACRjC,KAAKgC,UAAW,GAElBhC,KAAK+B,cAAa/B,KAAK2B,kBAAkBuB,wBAAiD9C,IAA5BJ,KAAKyC,aAAapC,SAEhFL,KAAK+B,YAAa,EACd/B,KAAK2B,kBAAkBwB,mBACzBnD,KAAKgC,UAAW,IAGpBhC,KAAKkC,sBAAmBC,EAAA,IACrBlD,IAAmC,EACpCkD,EAAClD,GAAoCe,KAAK+B,WAC1CI,EAAClD,GAAkCe,KAAKyC,aAAatC,KAAOH,KAAKE,KAAKC,GACtEgC,EAAClD,GAAoCe,KAAKE,KAAK2C,SAC/CV,EAAC,SAASnC,KAAKyB,MAAK,iBAAiBzB,KAAK0B,eAAiB,KAE7D1B,KAAKgD,cAEP1B,EAAAnC,UAAAiE,kBAAA,WACE,QAAOpD,KAAK2B,kBAAkB0B,gBAEhC/B,EAAAnC,UAAAmE,aAAA,WACE,IAAMC,EAAS,CACbC,WAAYvE,EACZwE,MAAOxE,GAWT,OATmD,OAA/Ce,KAAK2B,kBAAkB+B,sBACzBH,EAAOC,WAAaxD,KAAK2B,kBAAkB+B,qBAEzC1D,KAAK+B,WAC0C,OAAjD/B,KAAK2B,kBAAkBgC,sBACrBJ,EAAOE,MAAQzD,KAAK2B,kBAAkBgC,sBAAwBJ,EAAOE,MAAQxE,EACjC,OAArCe,KAAK2B,kBAAkBiC,YAChCL,EAAOE,MAAQzD,KAAK2B,kBAAkBiC,WAEjCL,GAETjC,EAAAnC,UAAA0E,YAAA,SAAY3D,GACV,OAAkB,OAAdA,EAAK4D,WAA+B1D,IAAdF,EAAK4D,MAAoC,KAAd5D,EAAK4D,KACjD,OACkB,OAAhB5D,EAAK4C,aAAmC1C,IAAhBF,EAAK4C,QAAwC,KAAhB5C,EAAK4C,OAC5D,SACqB,OAAnB5C,EAAK6D,gBAAyC3D,IAAnBF,EAAK6D,WAA8C,KAAnB7D,EAAK6D,UAClE,YACmB,OAAjB7D,EAAK8D,cAAqC5D,IAAjBF,EAAK8D,SAA0C,KAAjB9D,EAAK8D,QAC9D,UAEA,IAGX1C,EAAAnC,UAAA8E,mBAAA,WACE,OAAIjE,KAAK+B,YAAc/B,KAAKE,KAAKgE,cACxBlE,KAAKE,KAAKgE,cAEZlE,KAAKE,KAAK8D,SAEnB1C,EAAAnC,UAAAgF,gBAAA,WACE,OAAInE,KAAK+B,YAAc/B,KAAKE,KAAKkE,WACxBpE,KAAKE,KAAKkE,WAEZpE,KAAKE,KAAK4D,MAEnBxC,EAAAnC,UAAAkF,kBAAA,WACE,OAAIrE,KAAK+B,YAAc/B,KAAKE,KAAKoE,aACxBtE,KAAKE,KAAKoE,aAEZtE,KAAKE,KAAK4C,QAEnBxB,EAAAnC,UAAAoF,qBAAA,WACE,OAAIvE,KAAK+B,YAAc/B,KAAKE,KAAKsE,gBACxBxE,KAAKE,KAAKsE,gBAEZxE,KAAKE,KAAK6D,WAEnBzC,EAAAnC,UAAAsF,kBAAA,WACE,OAAIzE,KAAKE,KAAKwE,eACL1E,KAAKE,KAAKwE,eAEZzF,GAETqC,EAAAnC,UAAAwF,SAAA,WACE,OAAO3E,KAAKqC,aAAazC,OAAS,GAEpC0B,EAAAnC,UAAAyF,YAAA,WACE,OAAO5E,KAAK2B,kBAAkBkD,WAEhCvD,EAAAnC,UAAA6D,WAAA,iBACEhD,KAAK8E,UAAO3C,EAAA,IACT,UAASnC,KAAKyB,MAAQ,KAAM,EAC7BU,EAAA,gBAAgBnC,KAAK2E,YAAc3E,KAAKoD,wBAG5C9B,EAAAnC,UAAAwD,wBAAA,WACwC,OAAlC3C,KAAK4B,+BAAuExB,IAAlCJ,KAAK4B,2BAC7C5B,KAAK4B,2BAA6B5C,EAAAA,yBAAyB+F,SAC7D/E,KAAKgC,UAAW,GAEdhC,KAAK4B,2BAA6B5C,EAAAA,yBAAyBgG,WAC7DhF,KAAKgC,UAAW,KAItBV,EAAAnC,UAAA4F,OAAA,SAAO7E,GACDA,EAAK2C,WAGT7C,KAAKgC,UAAYhC,KAAKgC,SACtBhC,KAAKiC,kBAAmB,EACxBjC,KAAKgD,aAC6C,OAA9ChD,KAAK2B,kBAAkBsD,oBACtBjF,KAAK2B,kBAAkBsD,yBACT7E,IAAdF,EAAKS,MACLT,EAAKS,KAERX,KAAKuB,OAAO2D,SAAS,CAAChF,EAAKS,MAAOT,EAAKiF,kBAC9BjF,EAAKkF,YAAyC,mBAApBlF,EAAKkF,YACxClF,EAAKkF,WAAWlF,GAChBF,KAAKqF,iBAAiBnF,UACEE,IAAfF,EAAKG,OAAuBL,KAAK2B,kBAAkBwB,mBAC5DnD,KAAKqF,iBAAiBnF,KAG1BoB,EAAAnC,UAAAkG,iBAAA,SAAiBnF,GACfF,KAAK6B,aAAayD,KAAKpF,6BA1N1BqF,EAAAA,UAASnE,KAAA,CAAC,CACToE,SAAU,eACVC,SAAA,q2EAEAC,WAAY,CACVC,EAAAA,QAAQ,aAAc,CACpBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAAEC,OAAQ,IAAKC,QAAS,KAC1CC,EAAAA,WAAW,SAAU,CACnBH,EAAAA,MAAM,CAAEC,OAAQ,IAAKC,QAAS,KAC9BE,EAAAA,MAAM,CACJC,EAAAA,QAAQ,IAAKL,EAAAA,MAAM,CAAEC,OAAQ,KAC7BI,EAAAA,QAAQ,iBAAkBL,EAAAA,MAAM,CAAEE,QAAS,SAG/CC,EAAAA,WAAW,SAAU,CACnBH,EAAAA,MAAM,CAAEC,OAAQ,IAAKC,QAAS,IAC9BE,EAAAA,MAAM,CACJC,EAAAA,QAAQ,IAAKL,EAAAA,MAAM,CAAEC,OAAQ,OAC7BI,EAAAA,QAAQ,iBAAkBL,EAAAA,MAAM,CAAEE,QAAS,WAIjDJ,EAAAA,QAAQ,gBAAiB,CACvBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAAEM,UAAW,oBAC/BP,EAAAA,MAAM,MAAOC,EAAAA,MAAM,CAAEM,UAAW,kBAEhCH,EAAAA,WAAW,YACTE,EAAAA,QAAQ,MAEVF,EAAAA,WAAW,YACTE,EAAAA,QAAQ,QAGZP,EAAAA,QAAQ,gBAAiB,CACvBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAAEM,UAAW,mBAC/BP,EAAAA,MAAM,MAAOC,EAAAA,MAAM,CAAEM,UAAW,kBAEhCH,EAAAA,WAAW,YACTE,EAAAA,QAAQ,MAEVF,EAAAA,WAAW,YACTE,EAAAA,QAAQ,uxBAhDPE,EAAAA,cAGAlH,mCAmDNmH,EAAAA,qBACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,wCACAA,EAAAA,4BACAC,EAAAA,gBC3CH,iCAbCC,EAAAA,SAAQnF,KAAA,CAAC,CACRoF,QAAS,CACPC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBAEFC,aAAc,GACdC,QAAS,CACPJ,EAAAA,cACAC,EAAAA,cACAC,EAAAA,sCCeF,SAAAG,EACUvF,EACDC,GADCxB,KAAAuB,OAAAA,EACDvB,KAAAwB,sBAAAA,EApBAxB,KAAA+G,cAA+B,KAC/B/G,KAAAgH,qBAAiD,KAChDhH,KAAA6B,aAAe,IAAIC,EAAAA,aACnB9B,KAAAiH,cAAgB,IAAInF,EAAAA,aAE9B9B,KAAAkH,WAA4B,CAC1B7D,gBAAgB,EAChBK,oBAAqB,KACrBE,UAAW,KACXD,sBAAuB,KACvBsB,mBAAoB,KACpB9B,iBAAkB,KAClBD,mBAAmB,EACnBiE,aAAa,EACbtC,WAAW,GAEb7E,KAAAoH,iBAAkB,EAClBpH,KAAA4B,yBAAqD,YAKrDkF,EAAA3H,UAAAiD,YAAA,WACEpC,KAAKqH,sBACLrH,KAAKsH,8BAEPR,EAAA3H,UAAAyD,SAAA,WAAA,IAAA7C,EAAAC,KAE2B,OAAvBA,KAAK+G,oBAAiD3G,IAAvBJ,KAAK+G,eAAsD,KAAvB/G,KAAK+G,eAC9B,OAA1C/G,KAAK+G,cAAc9B,oBAA+BjF,KAAK+G,cAAc9B,qBACrEjF,KAAKuB,OAAOgG,OACTC,WAAU,SAACC,GACNA,aAAiBC,EAAAA,eACnB3H,EAAK4H,gBAAgBF,EAAMG,sBAGjC5H,KAAK2H,gBAAgB3H,KAAKuB,OAAOsG,OAGrCf,EAAA3H,UAAAwI,gBAAA,SAAgBE,GACd,IAAMC,EAAY9H,KAAKwB,sBAAsBP,sBAAsBjB,KAAKK,MAAOwH,QAE/DzH,IAAd0H,QACmB1H,IAAnB0H,EAAUnH,MACS,OAAnBmH,EAAUnH,MACS,KAAnBmH,EAAUnH,OAGVX,KAAK+H,YAAcD,EACnB9H,KAAKqF,iBAAiByC,KAG1BhB,EAAA3H,UAAA6I,eAAA,WAC4B,IAAtBhI,KAAKK,MAAMT,OACbqI,QAAQC,KAAKjJ,IAEbe,KAAKK,MAAQL,KAAKK,MAAMiC,QAAO,SAAAC,GAAK,OAACA,EAAEC,UACvCxC,KAAKwB,sBAAsB3B,YAAYG,KAAKK,SAGhDyG,EAAA3H,UAAAkI,oBAAA,WACE,GAA2B,OAAvBrH,KAAK+G,oBAAiD3G,IAAvBJ,KAAK+G,eAAsD,KAAvB/G,KAAK+G,cAC1E/G,KAAKoH,iBAAkB,MAClB,CACLpH,KAAKoH,iBAAkB,EACvB,IAAMe,EAASnI,KAAK+G,mBACU3G,IAA1B+H,EAAO9E,gBAA0D,OAA1B8E,EAAO9E,gBAA4D,kBAA1B8E,EAAO9E,iBACzFrD,KAAKkH,WAAW7D,eAAiB8E,EAAO9E,gBAEP,KAA/B8E,EAAOzE,qBACsB,OAA/ByE,EAAOzE,0BACwBtD,IAA/B+H,EAAOzE,sBACP1D,KAAKkH,WAAWxD,oBAAsByE,EAAOzE,qBAEtB,KAArByE,EAAOvE,WACY,OAArBuE,EAAOvE,gBACcxD,IAArB+H,EAAOvE,YACP5D,KAAKkH,WAAWtD,UAAYuE,EAAOvE,WAEA,KAAjCuE,EAAOxE,uBACwB,OAAjCwE,EAAOxE,4BAC0BvD,IAAjC+H,EAAOxE,wBACP3D,KAAKkH,WAAWvD,sBAAwBwE,EAAOxE,uBAEf,OAA9BwE,EAAOlD,yBACqB7E,IAA9B+H,EAAOlD,oBAC8B,kBAA9BkD,EAAOlD,qBACdjF,KAAKkH,WAAWjC,mBAAqBkD,EAAOlD,oBAEd,OAA5BkD,EAAOhF,uBACmB/C,IAA5B+H,EAAOhF,kBAC4B,kBAA5BgF,EAAOhF,mBACdnD,KAAKkH,WAAW/D,iBAAmBgF,EAAOhF,kBAEX,OAA7BgF,EAAOjF,wBACoB9C,IAA7B+H,EAAOjF,mBAC6B,kBAA7BiF,EAAOjF,oBACdlD,KAAKkH,WAAWhE,kBAAoBiF,EAAOjF,mBAElB,OAAvBiF,EAAOhB,kBACc/G,IAAvB+H,EAAOhB,aACuB,kBAAvBgB,EAAOhB,cACdnH,KAAKkH,WAAWC,YAAcgB,EAAOhB,aAEd,OAArBgB,EAAOtD,gBACYzE,IAArB+H,EAAOtD,WACqB,kBAArBsD,EAAOtD,YACd7E,KAAKkH,WAAWrC,UAAYsD,EAAOtD,WAGvC7E,KAAKgI,kBAEPlB,EAAA3H,UAAAmI,2BAAA,WACoC,OAA9BtH,KAAKgH,2BACuB5G,IAA9BJ,KAAKgH,uBACLhH,KAAK4B,yBAA2B5B,KAAKgH,uBAGzCF,EAAA3H,UAAAiJ,aAAA,WACE,OAAIpI,KAAKoH,gBACAnI,EAE8B,KAAjCe,KAAK+G,cAAcsB,WAAqD,OAAjCrI,KAAK+G,cAAcsB,gBAAuDjI,IAAjCJ,KAAK+G,cAAcsB,UAC3FpJ,EAA2B,IAAIe,KAAK+G,cAAcsB,UAErDpJ,GAIb6H,EAAA3H,UAAAmJ,eAAA,WACE,IAAKtI,KAAKoH,gBAAiB,CACzB,IAAM7D,EAAS,CACbC,WAAa,MAOf,MAL2C,KAAvCxD,KAAK+G,cAAcwB,iBACkB,OAAvCvI,KAAK+G,cAAcwB,sBACoBnI,IAAvCJ,KAAK+G,cAAcwB,kBACnBhF,EAAOC,WAAaxD,KAAK+G,cAAcwB,iBAElChF,IAGXuD,EAAA3H,UAAAyF,YAAA,WACE,OAAO5E,KAAKkH,WAAWrC,WAEzBiC,EAAA3H,UAAAkG,iBAAA,SAAiBoC,GACfzH,KAAK+H,YAAcN,OACCrH,IAAhBqH,EAAMpH,OAAyBoH,EAAMrC,YAA0C,mBAArBqC,EAAMrC,WAGlEpF,KAAKiH,cAAc3B,KAAKmC,GAFxBzH,KAAK6B,aAAayD,KAAKmC,6BA3J5BlC,EAAAA,UAASnE,KAAA,CAAC,CACToE,SAAU,8BACVC,SAAA,yiCAPsBW,EAAAA,cAGflH,oCAQNmH,EAAAA,6BACAA,EAAAA,oCACAA,EAAAA,4BACAC,EAAAA,8BACAA,EAAAA,gBCIH,iCAZCC,EAAAA,SAAQnF,KAAA,CAAC,CACRoF,QAAS,CACPgC,EAAAA,aACAC,EACAC,EAAAA,cAEF9B,aAAc,CACZE,EACAxF,GAEFuF,QAAS,CAACC","sourcesContent":["import { NavigationExtras } from '@angular/router';\n\nexport interface MultilevelNodes {\n  id?: string;\n  label: string;\n  faIcon?: string;\n  icon?: string;\n  imageIcon?: string;\n  svgIcon?: string;\n  activeFaIcon?: string;\n  activeIcon?: string;\n  activeImageIcon?: string;\n  activeSvgIcon?: string;\n  hidden?: boolean;\n  link?: string;\n  externalRedirect?: boolean;\n  hrefTargetType?: string;\n  data?: any;\n  items?: MultilevelNodes[];\n  onSelected?: Function;\n  disabled?: boolean;\n  expanded?: boolean;\n  navigationExtras?: NavigationExtras;\n}\n\nexport interface Configuration {\n    classname?: string;\n    paddingAtStart?: boolean;\n    backgroundColor?: string;\n    listBackgroundColor?: string;\n    fontColor?: string;\n    selectedListFontColor?: string;\n    interfaceWithRoute?: boolean;\n    collapseOnSelect?: boolean;\n    highlightOnSelect?: boolean;\n    useDividers?: boolean;\n    rtlLayout?: boolean;\n}\n\nexport interface BackgroundStyle {\n    background: string;\n}\n\nexport interface ListStyle {\n    background: string;\n    color: string;\n}\n\nexport enum ExpandCollapseStatusEnum {\n    expand = 'expand',\n    collapse = 'collapse',\n}\n","export const CONSTANT = {\n    PADDING_AT_START: true,\n    DEFAULT_CLASS_NAME: `amml-container`,\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\n    DEFAULT_HREF_TARGET_TYPE: '_self',\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\n};\n","import { Injectable } from '@angular/core';\nimport { MultilevelNodes } from './app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultilevelMenuService {\n  foundLinkObject: MultilevelNodes;\n  generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  recursiveCheckLink(nodes: MultilevelNodes[], link: string): void {\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\n      const node = nodes[nodeIndex];\n      for (const key in node) {\n        if (node.hasOwnProperty(key)) {\n          if (encodeURI(node.link) === link) {\n            this.foundLinkObject = node;\n          } else {\n            if (node.items !== undefined) {\n              this.recursiveCheckLink(node.items, link);\n            }\n          }\n        }\n      }\n    }\n  }\n  getMatchedObjectByUrl(node: MultilevelNodes[], link: string): MultilevelNodes {\n    this.recursiveCheckLink(node, link);\n    return this.foundLinkObject;\n  }\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\n  // https://angular.io/api/common/KeyValuePipe#description\n  kvDummyComparerFn() {\n    return 0;\n  }\n}\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Configuration, ListStyle, MultilevelNodes, ExpandCollapseStatusEnum } from './../app.model';\nimport { CONSTANT } from './../constants';\nimport { MultilevelMenuService } from './../multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({ height: '*', opacity: 0 })),\n      transition(':leave', [\n        style({ height: '*', opacity: 0.2 }),\n        group([\n          animate(200, style({ height: 0 })),\n          animate('200ms ease-out', style({ opacity: 0 }))\n        ])\n      ]),\n      transition(':enter', [\n        style({ height: '0', opacity: 0 }),\n        group([\n          animate(200, style({ height: '*' })),\n          animate('400ms ease-out', style({ opacity: 1 }))\n        ])\n      ])\n    ]),\n    trigger('isExpandedLTR', [\n      state('no', style({ transform: 'rotate(-90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ]),\n    trigger('isExpandedRTL', [\n      state('no', style({ transform: 'rotate(90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ])\n  ]\n})\nexport class ListItemComponent implements OnChanges, OnInit {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() submenuLevel = 0;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Input() nodeExpandCollapseStatus: ExpandCollapseStatusEnum = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  isSelected = false;\n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  expanded = false;\n  firstInitializer = false;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\n    }\n    this.setExpandCollapseStatus();\n  }\n  ngOnInit() {\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\n\n    if (this.node.faIcon !== null &&\n      this.node.faIcon !== undefined &&\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\n      this.node.faIcon = `fas ${this.node.faIcon}`;\n    }\n\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\n    if (typeof this.node.expanded === 'boolean') {\n      this.expanded = this.node.expanded;\n    }\n    this.setClasses();\n  }\n  setSelectedClass(isFound: boolean): void {\n    if (isFound) {\n      if (!this.firstInitializer) {\n        this.expanded = true;\n      }\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\n    } else {\n      this.isSelected = false;\n      if (this.nodeConfiguration.collapseOnSelect) {\n        this.expanded = false;\n      }\n    }\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\n    };\n    this.setClasses();\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  getListIcon(node: MultilevelNodes): string {\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\n      return `icon`;\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\n      return `faicon`;\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\n      return `imageicon`;\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\n      return `svgicon`;\n    } else {\n      return ``;\n    }\n  }\n  getSelectedSvgIcon() {\n    if (this.isSelected && this.node.activeSvgIcon) {\n      return this.node.activeSvgIcon;\n    }\n    return this.node.svgIcon;\n  }\n  getSelectedIcon() {\n    if (this.isSelected && this.node.activeIcon) {\n      return this.node.activeIcon;\n    }\n    return this.node.icon;\n  }\n  getSelectedFaIcon() {\n    if (this.isSelected && this.node.activeFaIcon) {\n      return this.node.activeFaIcon;\n    }\n    return this.node.faIcon;\n  }\n  getSelectedImageIcon() {\n    if (this.isSelected && this.node.activeImageIcon) {\n      return this.node.activeImageIcon;\n    }\n    return this.node.imageIcon;\n  }\n  getHrefTargetType() {\n    if (this.node.hrefTargetType) {\n      return this.node.hrefTargetType;\n    }\n    return CONSTANT.DEFAULT_HREF_TARGET_TYPE;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfiguration.rtlLayout;\n  }\n  setClasses(): void {\n    this.classes = {\n      [`level-${this.level + 1}`]: true,\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\n    };\n  }\n  setExpandCollapseStatus(): void {\n    if (this.nodeExpandCollapseStatus !== null && this.nodeExpandCollapseStatus !== undefined ) {\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.expand) {\n        this.expanded = true;\n      }\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.collapse) {\n        this.expanded = false;\n      }\n    }\n  }\n  expand(node: MultilevelNodes): void {\n    if (node.disabled) {\n      return;\n    }\n    this.expanded = !this.expanded;\n    this.firstInitializer = true;\n    this.setClasses();\n    if (this.nodeConfiguration.interfaceWithRoute !== null\n      && this.nodeConfiguration.interfaceWithRoute\n      && node.link !== undefined\n      && node.link\n    ) {\n      this.router.navigate([node.link], node.navigationExtras);\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\n      node.onSelected(node);\n      this.selectedListItem(node);\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\n      this.selectedListItem(node);\n    }\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ],\n  declarations: [],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ]\n})\nexport class MaterialsModule { }\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BackgroundStyle, Configuration, MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\nimport { CONSTANT } from './constants';\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  templateUrl: './ng-material-multilevel-menu.component.html',\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Input() expandCollapseStatus: ExpandCollapseStatusEnum = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\n  currentNode: MultilevelNodes;\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null,\n    interfaceWithRoute: null,\n    collapseOnSelect: null,\n    highlightOnSelect: false,\n    useDividers: true,\n    rtlLayout: false,\n  };\n  isInvalidConfig = true;\n  nodeExpandCollapseStatus: ExpandCollapseStatusEnum = null;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnChanges() {\n    this.detectInvalidConfig();\n    this.detectExpandCollapseStatus();\n  }\n  ngOnInit() {\n    if (\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\n      this.router.events\n        .subscribe((event) => {\n          if (event instanceof NavigationEnd) {\n            this.updateNodeByURL(event.urlAfterRedirects);\n          }\n        });\n      this.updateNodeByURL(this.router.url);\n    }\n  }\n  updateNodeByURL(url: string): void {\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\n    if (\n      foundNode !== undefined &&\n      foundNode.link !== undefined &&\n      foundNode.link !== null &&\n      foundNode.link !== ''\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\n    ) {\n      this.currentNode = foundNode;\n      this.selectedListItem(foundNode);\n    }\n  }\n  checkValidData(): void {\n    if (this.items.length === 0) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n      if (config.interfaceWithRoute !== null &&\n        config.interfaceWithRoute !== undefined &&\n        typeof config.interfaceWithRoute === 'boolean') {\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\n      }\n      if (config.collapseOnSelect !== null &&\n        config.collapseOnSelect !== undefined &&\n        typeof config.collapseOnSelect === 'boolean') {\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\n      }\n      if (config.highlightOnSelect !== null &&\n        config.highlightOnSelect !== undefined &&\n        typeof config.highlightOnSelect === 'boolean') {\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\n      }\n      if (config.useDividers !== null &&\n        config.useDividers !== undefined &&\n        typeof config.useDividers === 'boolean') {\n        this.nodeConfig.useDividers = config.useDividers;\n      }\n      if (config.rtlLayout !== null &&\n        config.rtlLayout !== undefined &&\n        typeof config.rtlLayout === 'boolean') {\n        this.nodeConfig.rtlLayout = config.rtlLayout;\n      }\n    }\n    this.checkValidData();\n  }\n  detectExpandCollapseStatus(): void {\n    if (this.expandCollapseStatus !== null &&\n      this.expandCollapseStatus !== undefined) {\n      this.nodeExpandCollapseStatus = this.expandCollapseStatus;\n    }\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfig.rtlLayout;\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.currentNode = event;\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\n      this.selectedItem.emit(event);\n    } else {\n      this.selectedLabel.emit(event);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { MaterialsModule } from './materials.module';\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    RouterModule,\n  ],\n  declarations: [\n    NgMaterialMultilevelMenuComponent,\n    ListItemComponent,\n  ],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule { }\n"]}