{"version":3,"sources":["ng://ng-material-multilevel-menu/lib/constants.ts","ng://ng-material-multilevel-menu/lib/multilevel-menu.service.ts","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.ts","ng://ng-material-multilevel-menu/lib/materials.module.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.module.ts"],"names":["CONSTANT","PADDING_AT_START","DEFAULT_CLASS_NAME","DEFAULT_LIST_CLASS_NAME","SELECTED_LIST_CLASS_NAME","ACTIVE_ITEM_CLASS_NAME","DISABLED_ITEM_CLASS_NAME","DEFAULT_SELECTED_FONT_COLOR","DEFAULT_LIST_BACKGROUND_COLOR","DEFAULT_LIST_FONT_COLOR","ERROR_MESSAGE","MultilevelMenuService","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","this","forEach","node","id","items","undefined","recursiveCheckId","nodeId","some","nestedNode","recursiveCheckLink","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","kvDummyComparerFn","Injectable","args","providedIn","ListItemComponent","router","multilevelMenuService","level","submenuLevel","nodeConfiguration","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","selectedListClasses","_a","ngOnChanges","nodeChildren","filter","n","hidden","selectedNode","setSelectedClass","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","getListStyle","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","hasItems","isRtlLayout","rtlLayout","classes","expand","interfaceWithRoute","externalRedirect","window","location","href","navigate","navigationExtras","onSelected","selectedListItem","emit","Component","selector","template","animations","trigger","state","style","height","opacity","transition","group","animate","transform","Router","Input","Output","MaterialsModule","NgModule","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","NgMaterialMultilevelMenuComponent","configuration","selectedLabel","nodeConfig","isInvalidConfig","detectInvalidConfig","events","subscribe","event","NavigationEnd","updateNodeByURL","url","foundNode","currentNode","checkValidData","console","warn","config","getClassName","classname","getGlobalStyle","backgroundColor","NgMaterialMultilevelMenuModule","CommonModule","RouterModule"],"mappings":"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","sourcesContent":["export const CONSTANT = {\n    PADDING_AT_START: true,\n    DEFAULT_CLASS_NAME: `amml-container`,\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\n};\n","import { Injectable } from '@angular/core';\nimport { MultilevelNodes } from './app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultilevelMenuService {\n  foundLinkObject: MultilevelNodes;\n  generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  recursiveCheckLink(nodes: MultilevelNodes[], link: string): void {\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\n      const node = nodes[nodeIndex];\n      for (const key in node) {\n        if (node.hasOwnProperty(key)) {\n          if (encodeURI(node.link) === link) {\n            this.foundLinkObject = node;\n          } else {\n            if (node.items !== undefined) {\n              this.recursiveCheckLink(node.items, link);\n            }\n          }\n        }\n      }\n    }\n  }\n  getMatchedObjectByUrl(node: MultilevelNodes[], link: string): MultilevelNodes {\n    this.recursiveCheckLink(node, link);\n    return this.foundLinkObject;\n  }\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\n  // https://angular.io/api/common/KeyValuePipe#description\n  kvDummyComparerFn() {\n    return 0;\n  }\n}\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Configuration, ListStyle, MultilevelNodes } from './../app.model';\nimport { CONSTANT } from './../constants';\nimport { MultilevelMenuService } from './../multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({ height: '*', opacity: 0 })),\n      transition(':leave', [\n        style({ height: '*', opacity: 0.2 }),\n        group([\n          animate(200, style({ height: 0 })),\n          animate('200ms ease-out', style({ opacity: 0 }))\n        ])\n      ]),\n      transition(':enter', [\n        style({ height: '0', opacity: 0 }),\n        group([\n          animate(200, style({ height: '*' })),\n          animate('400ms ease-out', style({ opacity: 1 }))\n        ])\n      ])\n    ]),\n    trigger('isExpandedLTR', [\n      state('no', style({ transform: 'rotate(-90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ]),\n    trigger('isExpandedRTL', [\n      state('no', style({ transform: 'rotate(90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ])\n  ]\n})\nexport class ListItemComponent implements OnChanges, OnInit {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() submenuLevel = 0;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  isSelected = false;\n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  expanded = false;\n  firstInitializer = false;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\n    }\n  }\n  ngOnInit() {\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\n\n    if (this.node.faIcon !== null &&\n      this.node.faIcon !== undefined &&\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\n      this.node.faIcon = `fas ${this.node.faIcon}`;\n    }\n\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\n    if (typeof this.node.expanded === 'boolean') {\n      this.expanded = this.node.expanded;\n    }\n    this.setClasses();\n  }\n  setSelectedClass(isFound: boolean): void {\n    if (isFound) {\n      if (!this.firstInitializer) {\n        this.expanded = true;\n      }\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\n    } else {\n      this.isSelected = false;\n      if (this.nodeConfiguration.collapseOnSelect) {\n        this.expanded = false;\n      }\n    }\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\n    };\n    this.setClasses();\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  getListIcon(node: MultilevelNodes): string {\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\n      return `icon`;\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\n      return `faicon`;\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\n      return `imageicon`;\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\n      return `svgicon`;\n    } else {\n      return ``;\n    }\n  }\n  getSelectedSvgIcon() {\n    if (this.isSelected && this.node.activeSvgIcon) {\n      return this.node.activeSvgIcon;\n    }\n    return this.node.svgIcon;\n  }\n  getSelectedIcon() {\n    if (this.isSelected && this.node.activeIcon) {\n      return this.node.activeIcon;\n    }\n    return this.node.icon;\n  }\n  getSelectedFaIcon() {\n    if (this.isSelected && this.node.activeFaIcon) {\n      return this.node.activeFaIcon;\n    }\n    return this.node.faIcon;\n  }\n  getSelectedImageIcon() {\n    if (this.isSelected && this.node.activeImageIcon) {\n      return this.node.activeImageIcon;\n    }\n    return this.node.imageIcon;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfiguration.rtlLayout;\n  }\n  setClasses(): void {\n    this.classes = {\n      [`level-${this.level + 1}`]: true,\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\n    };\n  }\n  expand(node: MultilevelNodes): void {\n    if (node.disabled) {\n      return;\n    }\n    this.expanded = !this.expanded;\n    this.firstInitializer = true;\n    this.setClasses();\n    if (this.nodeConfiguration.interfaceWithRoute !== null\n      && this.nodeConfiguration.interfaceWithRoute\n      && node.link !== undefined\n      && node.link\n    ) {\n      if (node.externalRedirect !== undefined && node.externalRedirect) {\n        window.location.href = node.link;\n      } else {\n        this.router.navigate([node.link], node.navigationExtras);\n      }\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\n      node.onSelected(node);\n      this.selectedListItem(node);\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\n      this.selectedListItem(node);\n    }\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ],\n  declarations: [],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ]\n})\nexport class MaterialsModule { }\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BackgroundStyle, Configuration, MultilevelNodes } from './app.model';\nimport { CONSTANT } from './constants';\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  templateUrl: './ng-material-multilevel-menu.component.html',\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\n  currentNode: MultilevelNodes;\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null,\n    interfaceWithRoute: null,\n    collapseOnSelect: null,\n    highlightOnSelect: false,\n    rtlLayout: false,\n  };\n  isInvalidConfig = true;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnChanges() {\n    this.detectInvalidConfig();\n  }\n  ngOnInit() {\n    if (\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\n      this.router.events\n        .subscribe((event) => {\n          if (event instanceof NavigationEnd) {\n            this.updateNodeByURL(event.url);\n          }\n        });\n      this.updateNodeByURL(this.router.url);\n    }\n  }\n  updateNodeByURL(url: string): void {\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\n    if (\n      foundNode !== undefined &&\n      foundNode.link !== undefined &&\n      foundNode.link !== null &&\n      foundNode.link !== ''\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\n    ) {\n      this.currentNode = foundNode;\n      this.selectedListItem(foundNode);\n    }\n  }\n  checkValidData(): void {\n    if (this.items.length === 0) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n      if (config.interfaceWithRoute !== null &&\n        config.interfaceWithRoute !== undefined &&\n        typeof config.interfaceWithRoute === 'boolean') {\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\n      }\n      if (config.collapseOnSelect !== null &&\n        config.collapseOnSelect !== undefined &&\n        typeof config.collapseOnSelect === 'boolean') {\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\n      }\n      if (config.highlightOnSelect !== null &&\n        config.highlightOnSelect !== undefined &&\n        typeof config.highlightOnSelect === 'boolean') {\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\n      }\n      if (config.rtlLayout !== null &&\n        config.rtlLayout !== undefined &&\n        typeof config.rtlLayout === 'boolean') {\n        this.nodeConfig.rtlLayout = config.rtlLayout;\n      }\n      this.checkValidData();\n    }\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfig.rtlLayout;\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.currentNode = event;\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\n      this.selectedItem.emit(event);\n    } else {\n      this.selectedLabel.emit(event);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { MaterialsModule } from './materials.module';\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    RouterModule,\n  ],\n  declarations: [NgMaterialMultilevelMenuComponent, ListItemComponent],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule { }\n"]}