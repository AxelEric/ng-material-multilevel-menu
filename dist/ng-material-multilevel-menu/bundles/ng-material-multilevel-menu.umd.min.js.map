{"version":3,"sources":["ng://ng-material-multilevel-menu/lib/constants.ts","ng://ng-material-multilevel-menu/lib/multilevel-menu.service.ts","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.html","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.ts","ng://ng-material-multilevel-menu/lib/materials.module.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.html","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.module.ts"],"names":["CONSTANT","MultilevelMenuService","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","this","forEach","node","id","undefined","items","recursiveCheckId","nodeId","some","nestedNode","recursiveCheckLink","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","kvDummyComparerFn","factory","ɵfac","providedIn","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵtemplate","i0.ɵɵlistener","ctx_r0","selectedListClasses","getListStyle","i0.ɵɵtextInterpolate","singleNode_r12","value","ctx_r11","level","selectedNode","ctx_r1","isRtlLayout","classes","ListItemComponent","router","multilevelMenuService","submenuLevel","nodeConfiguration","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","_a","ngOnChanges","nodeChildren","filter","n","hidden","setSelectedClass","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","hasItems","rtlLayout","expand","interfaceWithRoute","externalRedirect","window","location","href","navigate","navigationExtras","onSelected","selectedListItem","emit","core","ɵɵdirectiveInject","Router","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","pipes","common","KeyValuePipe","data","animation","trigger","state","style","height","opacity","transition","group","animate","transform","MaterialsModule","imports","MatIconModule","MatListModule","MatRippleModule","node_r2","currentNode","getGlobalStyle","exports","NgMaterialMultilevelMenuComponent","configuration","selectedLabel","nodeConfig","isInvalidConfig","detectInvalidConfig","events","subscribe","event","NavigationEnd","updateNodeByURL","url","foundNode","checkValidData","console","warn","config","getClassName","classname","backgroundColor","NgMaterialMultilevelMenuModule","CommonModule","RouterModule","declarations"],"mappings":"s3BAAO,IAAMA,EAEW,iBAFXA,EAGgB,YAHhBA,EAIiB,qBAJjBA,EAKe,mBALfA,EAMiB,qBANjBA,EAOoB,UAPpBA,EAQsB,cARtBA,EASgB,kBAThBA,EAUM,sDCPnBC,EAAA,WAAA,SAAAA,YAKEA,EAAAC,UAAAC,WAAA,WAGE,IAFA,IAAIC,EAAO,GACLC,EAAW,iEACRC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASM,SAE9D,OAAOP,GAETH,EAAAC,UAAAU,YAAA,SAAYC,GAAZ,IAAAC,EAAAC,KACEF,EAAMG,SAAQ,SAACC,GACbA,EAAKC,GAAKJ,EAAKX,kBACIgB,IAAfF,EAAKG,OACPN,EAAKF,YAAYK,EAAKG,WAI5BnB,EAAAC,UAAAmB,iBAAA,SAAiBJ,EAAuBK,GAAxC,IAAAR,EAAAC,KACE,OAAIE,EAAKC,KAAOI,SAGKH,IAAfF,EAAKG,MACAH,EAAKG,MAAMG,MAAK,SAACC,GACtB,OAAOV,EAAKO,iBAAiBG,EAAYF,WAF7C,IAOJrB,EAAAC,UAAAuB,mBAAA,SAAmBZ,EAA0Ba,GAC3C,IAAK,IAAIC,EAAY,EAAGA,EAAYd,EAAMF,OAAQgB,IAAa,CAC7D,IAAMV,EAAOJ,EAAMc,GACnB,IAAK,IAAMC,KAAOX,EACZA,EAAKY,eAAeD,KAClBE,UAAUb,EAAKS,QAAUA,EAC3BX,KAAKgB,gBAAkBd,OAEJE,IAAfF,EAAKG,OACPL,KAAKU,mBAAmBR,EAAKG,MAAOM,MAOhDzB,EAAAC,UAAA8B,sBAAA,SAAsBf,EAAyBS,GAE7C,OADAX,KAAKU,mBAAmBR,EAAMS,GACvBX,KAAKgB,iBAId9B,EAAAC,UAAA+B,kBAAA,WACE,OAAO,oCApDEhC,wCAAAA,EAAqBiC,QAArBjC,EAAqBkC,KAAAC,WAFpB,WADd,4BCGQC,EAAAA,eAAAA,EAAAA,OAAAA,IACEC,EAAAA,UAAAA,EAAAA,IAAAA,IACFC,EAAAA,8CADKC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,+CAELJ,EAAAA,eAAAA,EAAAA,WAAAA,IACEK,EAAAA,OAAAA,GACFH,EAAAA,8CADEC,EAAAA,UAAAA,GAAAG,EAAAA,mBAAAA,IAAAA,EAAAA,kBAAAA,8BAEFL,EAAAA,UAAAA,EAAAA,WAAAA,kCAAoCM,EAAAA,sBAAAA,UAAAA,EAAAA,+CAEpCN,EAAAA,UAAAA,EAAAA,MAAAA,kCAAiEM,EAAAA,sBAAAA,MAAAA,EAAAA,uBAAAA,EAAAA,eAAiCA,EAAAA,sBAAAA,MAAAA,EAAAA,KAAAA,iCAMtGP,EAAAA,eAAAA,EAAAA,YACEK,EAAAA,OAAAA,EAAAA,yBACFH,EAAAA,8CAFiCE,EAAAA,WAAAA,iBAAAA,EAAAA,SAAAA,MAAAA,gCAGjCJ,EAAAA,eAAAA,EAAAA,YACEK,EAAAA,OAAAA,EAAAA,yBACFH,EAAAA,8CAFiCE,EAAAA,WAAAA,iBAAAA,EAAAA,SAAAA,MAAAA,gCAJnCJ,EAAAA,eAAAA,EAAAA,MAAAA,IACEQ,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,WAAAA,IAGAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,WAAAA,IAGFN,EAAAA,8CANYC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,eAGAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,mEAvBdJ,EAAAA,eAAAA,EAAAA,gBAAAA,GACES,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,gBAAAA,OAAAA,EAAAA,OAAAA,EAAAA,SAEAT,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,IAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEQ,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,GAGAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,WAAAA,GAGAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,WAAAA,GAEAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GACFN,EAAAA,eACFA,EAAAA,eACAF,EAAAA,eAAAA,EAAAA,OAAAA,IAAoBK,EAAAA,OAAAA,GAAcH,EAAAA,eACpCA,EAAAA,eACAM,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,EAAAA,MAAAA,IAQFN,EAAAA,+CA1ByBK,EAAAA,sBAAAA,QAAAA,EAAAA,KAAAA,OADAH,EAAAA,WAAAA,oBAAAA,EAAAA,KAAAA,SAAAA,CAAmC,UAAAM,EAAAC,oBAAnCP,CAAmC,UAAAM,EAAAE,gBAGnCT,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,MAAAA,EAAAA,cAAAA,MAAAA,OAClBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,aAAAA,EAAAA,KAAAA,MAC2BD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,WAAAA,EAAAA,YAAAA,EAAAA,OACpBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,eAAAA,UAGID,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,eAAAA,QAGAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,eAAAA,WAESD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,eAAAA,aAGHD,EAAAA,UAAAA,GAAAU,EAAAA,kBAAAA,EAAAA,KAAAA,OAEiBV,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,gEAavCJ,EAAAA,eAAAA,EAAAA,eAAAA,IAMES,EAAAA,WAAAA,gBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,iBAAAA,MACFP,EAAAA,8DANEE,EAAAA,WAAAA,oBAAAA,EAAAA,kBAAAA,CAAuC,OAAAU,EAAAC,MAAvCX,CAAuC,QAAAY,EAAAC,MAAA,EAAvCb,CAAuC,eAAAU,EAAAvB,IAAvCa,CAAuC,eAAAY,EAAAE,wCAF3ClB,EAAAA,eAAAA,EAAAA,MAAAA,IACEQ,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,2BAQFN,EAAAA,6CAToCE,EAAAA,WAAAA,mBAAAA,EAAAA,CAAa,MAAAe,EAAAC,cAAA,MAAA,MAAbhB,CAAa,UAAAe,EAAAE,SACjClB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,aAAAA,EAAAA,sBAAAA,qBCvBhB,IAAAkB,EAAA,WA2DE,SAAAA,EACUC,EACDC,SADC9C,KAAA6C,OAAAA,EACD7C,KAAA8C,sBAAAA,EAbA9C,KAAAuC,MAAQ,EACRvC,KAAA+C,aAAe,EAEf/C,KAAAgD,kBAAmC,KAClChD,KAAAiD,aAAe,IAAIC,EAAAA,aAC7BlD,KAAAmD,YAAa,EAIbnD,KAAAoD,UAAW,EACXpD,KAAAqD,kBAAmB,EAKjBrD,KAAKiC,sBAAmBqB,EAAA,IACrBrE,IAAmC,EACpCqE,EAACrE,IAAoC,EACrCqE,EAACrE,IAAkC,YAGvC2D,EAAAzD,UAAAoE,YAAA,WACEvD,KAAKwD,aAAexD,KAAKE,MAAQF,KAAKE,KAAKG,MAAQL,KAAKE,KAAKG,MAAMoD,QAAO,SAAAC,GAAK,OAACA,EAAEC,UAAU,QAClEvD,IAAtBJ,KAAKwC,cAAoD,OAAtBxC,KAAKwC,cAC1CxC,KAAK4D,iBAAiB5D,KAAK8C,sBAAsBxC,iBAAiBN,KAAKE,KAAMF,KAAKwC,aAAarC,MAGnGyC,EAAAzD,UAAA0E,SAAA,WACE7D,KAAKiC,oBAAoBhD,GAAqCe,KAAKE,KAAK4D,SAE/C,OAArB9D,KAAKE,KAAK6D,aACS3D,IAArBJ,KAAKE,KAAK6D,QACgC,OAA1C/D,KAAKE,KAAK6D,OAAOC,MAAM,iBACvBhE,KAAKE,KAAK6D,OAAS,OAAO/D,KAAKE,KAAK6D,QAGtC/D,KAAKiC,oBAAoB,SAASjC,KAAKuC,MAAK,iBAAiBvC,KAAK+C,eAAkB,EAClD,kBAAvB/C,KAAKE,KAAKkD,WACnBpD,KAAKoD,SAAWpD,KAAKE,KAAKkD,UAE5BpD,KAAKiE,cAEPrB,EAAAzD,UAAAyE,iBAAA,SAAiBM,SACXA,GACGlE,KAAKqD,mBACRrD,KAAKoD,UAAW,GAElBpD,KAAKmD,cAAanD,KAAKgD,kBAAkBmB,wBAAiD/D,IAA5BJ,KAAKwC,aAAanC,SAEhFL,KAAKmD,YAAa,EACdnD,KAAKgD,kBAAkBoB,mBACzBpE,KAAKoD,UAAW,IAGpBpD,KAAKiC,sBAAmBqB,EAAA,IACrBrE,IAAmC,EACpCqE,EAACrE,GAAoCe,KAAKmD,WAC1CG,EAACrE,GAAkCe,KAAKwC,aAAarC,KAAOH,KAAKE,KAAKC,GACtEmD,EAACrE,GAAoCe,KAAKE,KAAK4D,SAC/CR,EAAC,SAAStD,KAAKuC,MAAK,iBAAiBvC,KAAK+C,eAAiB,KAE7D/C,KAAKiE,cAEPrB,EAAAzD,UAAAkF,kBAAA,WACE,QAAOrE,KAAKgD,kBAAkBsB,gBAEhC1B,EAAAzD,UAAA+C,aAAA,WACE,IAAMqC,EAAS,CACbC,WAAYvF,EACZwF,MAAOxF,GAWT,OATmD,OAA/Ce,KAAKgD,kBAAkB0B,sBACzBH,EAAOC,WAAaxE,KAAKgD,kBAAkB0B,qBAEzC1E,KAAKmD,WAC0C,OAAjDnD,KAAKgD,kBAAkB2B,sBACrBJ,EAAOE,MAAQzE,KAAKgD,kBAAkB2B,sBAAwBJ,EAAOE,MAAQxF,EACjC,OAArCe,KAAKgD,kBAAkB4B,YAChCL,EAAOE,MAAQzE,KAAKgD,kBAAkB4B,WAEjCL,GAET3B,EAAAzD,UAAA0F,YAAA,SAAY3E,GACV,OAAkB,OAAdA,EAAK4E,WAA+B1E,IAAdF,EAAK4E,MAAoC,KAAd5E,EAAK4E,KACjD,OACkB,OAAhB5E,EAAK6D,aAAmC3D,IAAhBF,EAAK6D,QAAwC,KAAhB7D,EAAK6D,OAC5D,SACqB,OAAnB7D,EAAK6E,gBAAyC3E,IAAnBF,EAAK6E,WAA8C,KAAnB7E,EAAK6E,UAClE,YACmB,OAAjB7E,EAAK8E,cAAqC5E,IAAjBF,EAAK8E,SAA0C,KAAjB9E,EAAK8E,QAC9D,UAEA,IAGXpC,EAAAzD,UAAA8F,mBAAA,WACE,OAAIjF,KAAKmD,YAAcnD,KAAKE,KAAKgF,cACxBlF,KAAKE,KAAKgF,cAEZlF,KAAKE,KAAK8E,SAEnBpC,EAAAzD,UAAAgG,gBAAA,WACE,OAAInF,KAAKmD,YAAcnD,KAAKE,KAAKkF,WACxBpF,KAAKE,KAAKkF,WAEZpF,KAAKE,KAAK4E,MAEnBlC,EAAAzD,UAAAkG,kBAAA,WACE,OAAIrF,KAAKmD,YAAcnD,KAAKE,KAAKoF,aACxBtF,KAAKE,KAAKoF,aAEZtF,KAAKE,KAAK6D,QAEnBnB,EAAAzD,UAAAoG,qBAAA,WACE,OAAIvF,KAAKmD,YAAcnD,KAAKE,KAAKsF,gBACxBxF,KAAKE,KAAKsF,gBAEZxF,KAAKE,KAAK6E,WAEnBnC,EAAAzD,UAAAsG,SAAA,WACE,OAAOzF,KAAKwD,aAAa5D,OAAS,GAEpCgD,EAAAzD,UAAAuD,YAAA,WACE,OAAO1C,KAAKgD,kBAAkB0C,WAEhC9C,EAAAzD,UAAA8E,WAAA,iBACEjE,KAAK2C,UAAOW,EAAA,IACT,UAAStD,KAAKuC,MAAQ,KAAM,EAC7Be,EAAA,gBAAgBtD,KAAKyF,YAAczF,KAAKqE,wBAG5CzB,EAAAzD,UAAAwG,OAAA,SAAOzF,GACDA,EAAK4D,WAGT9D,KAAKoD,UAAYpD,KAAKoD,SACtBpD,KAAKqD,kBAAmB,EACxBrD,KAAKiE,aAC6C,OAA9CjE,KAAKgD,kBAAkB4C,oBACtB5F,KAAKgD,kBAAkB4C,yBACTxF,IAAdF,EAAKS,MACLT,EAAKS,UAEsBP,IAA1BF,EAAK2F,kBAAkC3F,EAAK2F,iBAC9CC,OAAOC,SAASC,KAAO9F,EAAKS,KAE5BX,KAAK6C,OAAOoD,SAAS,CAAC/F,EAAKS,MAAOT,EAAKgG,kBAEhChG,EAAKiG,YAAyC,mBAApBjG,EAAKiG,YACxCjG,EAAKiG,WAAWjG,GAChBF,KAAKoG,iBAAiBlG,UACEE,IAAfF,EAAKG,OAAuBL,KAAKgD,kBAAkBoB,mBAC5DpE,KAAKoG,iBAAiBlG,KAG1B0C,EAAAzD,UAAAiH,iBAAA,SAAiBlG,GACfF,KAAKiD,aAAaoD,KAAKnG,qCA9Jd0C,GAAiB0D,EAAAC,kBAAA1D,EAAA2D,QAAAF,EAAAC,kBAAArH,sCAAjB0D,EAAiB6D,UAAA,CAAA,CAAA,iBAAAC,OAAA,CAAAxG,KAAA,OAAAqC,MAAA,QAAAQ,aAAA,eAAAP,aAAA,eAAAQ,kBAAA,qBAAA2D,QAAA,CAAA1D,aAAA,gBAAA2D,SAAA,CAAAN,EAAAO,sBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,YAAA,GAAA,EAAA,oBAAA,UAAA,QAAA,UAAA,QAAA,EAAA,QAAA,CAAA,EAAA,MAAA,UAAA,EAAA,QAAA,CAAA,YAAA,GAAA,EAAA,oBAAA,UAAA,QAAA,UAAA,SAAA,CAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,YAAA,EAAA,cAAA,CAAA,EAAA,iBAAA,EAAA,YAAA,CAAA,QAAA,yBAAA,EAAA,gBAAA,CAAA,QAAA,YAAA,EAAA,gBAAA,CAAA,QAAA,0BAAA,EAAA,UAAA,EAAA,gBAAA,CAAA,gBAAA,GAAA,QAAA,YAAA,EAAA,MAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,SAAA,CAAA,QAAA,4BAAA,EAAA,QAAA,CAAA,EAAA,YAAA,gBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,aAAA,CAAA,EAAA,YAAA,gBAAA,EAAA,WAAA,CAAA,gBAAA,GAAA,EAAA,YAAA,EAAA,MAAA,OAAA,CAAA,EAAA,6BAAA,CAAA,EAAA,QAAA,CAAA,EAAA,MAAA,WAAA,CAAA,EAAA,oBAAA,OAAA,QAAA,eAAA,eAAA,eAAA,EAAA,QAAA,WAAA,CAAA,EAAA,oBAAA,OAAA,QAAA,eAAA,eAAA,iBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDvD9BpF,EAAAA,WAAAA,EAAAA,EAAAA,GAAAA,GAAAA,gBAAAA,GA6BAP,EAAAA,UAAAA,EAAAA,eAEAO,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,UA/B6FJ,EAAAA,WAAAA,QAAAA,EAAAA,KAAAA,QA+BxFD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,+LCwBQkB,GAAiBwE,MAAA,CAAAC,EAAAC,cAAA/C,OAAA,CAAA,q1BAAAgD,KAAA,CAAAC,UA1ChB,CACVC,EAAAA,QAAQ,aAAc,CACpBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAAEC,OAAQ,IAAKC,QAAS,KAC1CC,EAAAA,WAAW,SAAU,CACnBH,EAAAA,MAAM,CAAEC,OAAQ,IAAKC,QAAS,KAC9BE,EAAAA,MAAM,CACJC,EAAAA,QAAQ,IAAKL,EAAAA,MAAM,CAAEC,OAAQ,KAC7BI,EAAAA,QAAQ,iBAAkBL,EAAAA,MAAM,CAAEE,QAAS,SAG/CC,EAAAA,WAAW,SAAU,CACnBH,EAAAA,MAAM,CAAEC,OAAQ,IAAKC,QAAS,IAC9BE,EAAAA,MAAM,CACJC,EAAAA,QAAQ,IAAKL,EAAAA,MAAM,CAAEC,OAAQ,OAC7BI,EAAAA,QAAQ,iBAAkBL,EAAAA,MAAM,CAAEE,QAAS,WAIjDJ,EAAAA,QAAQ,gBAAiB,CACvBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAAEM,UAAW,oBAC/BP,EAAAA,MAAM,MAAOC,EAAAA,MAAM,CAAEM,UAAW,kBAEhCH,EAAAA,WAAW,YACTE,EAAAA,QAAQ,MAEVF,EAAAA,WAAW,YACTE,EAAAA,QAAQ,QAGZP,EAAAA,QAAQ,gBAAiB,CACvBC,EAAAA,MAAM,KAAMC,EAAAA,MAAM,CAAEM,UAAW,mBAC/BP,EAAAA,MAAM,MAAOC,EAAAA,MAAM,CAAEM,UAAW,kBAEhCH,EAAAA,WAAW,YACTE,EAAAA,QAAQ,MAEVF,EAAAA,WAAW,YACTE,EAAAA,QAAQ,cAzChB,GCHAE,EAAA,WAAA,SAAAA,4CAaaA,iEAAAA,IAAeC,QAAA,CAZjB,CACPC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBAIAF,EAAAA,cACAC,EAAAA,cACAC,EAAAA,qBAVJ,sDCJIhH,EAAAA,eAAAA,EAAAA,eAAAA,GAOES,EAAAA,WAAAA,gBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,iBAAAA,MAEFP,EAAAA,8DAPEE,EAAAA,WAAAA,oBAAAA,EAAAA,WAAAA,CAAgC,OAAA6G,EAAAlG,MAAhCX,CAAgC,QAAA,EAAhCA,CAAgC,eAAA6G,EAAA1H,IAAhCa,CAAgC,eAAAe,EAAA+F,uCAJtClH,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,YACEQ,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,0BAUFN,EAAAA,eACFA,EAAAA,6CAbKE,EAAAA,WAAAA,UAAAA,EAAAA,eAAAA,CAA0B,UAAAM,EAAAyG,iBAA1B/G,CAA0B,MAAAM,EAAAU,cAAA,MAAA,OAGzBjB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,sBAAAA,sFDgBOwG,EAAe,CAAAC,QAAA,CAXxBC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBAAeI,QAAA,CAIfN,EAAAA,cACAC,EAAAA,cACAC,EAAAA,oCEcF,SAAAK,EACU9F,EACDC,GADC9C,KAAA6C,OAAAA,EACD7C,KAAA8C,sBAAAA,EAjBA9C,KAAA4I,cAA+B,KAC9B5I,KAAAiD,aAAe,IAAIC,EAAAA,aACnBlD,KAAA6I,cAAgB,IAAI3F,EAAAA,aAE9BlD,KAAA8I,WAA4B,CAC1BxE,gBAAgB,EAChBI,oBAAqB,KACrBE,UAAW,KACXD,sBAAuB,KACvBiB,mBAAoB,KACpBxB,iBAAkB,KAClBD,mBAAmB,EACnBuB,WAAW,GAEb1F,KAAA+I,iBAAkB,SAKlBJ,EAAAxJ,UAAAoE,YAAA,WACEvD,KAAKgJ,uBAEPL,EAAAxJ,UAAA0E,SAAA,WAAA,IAAA9D,EAAAC,KAE2B,OAAvBA,KAAK4I,oBAAiDxI,IAAvBJ,KAAK4I,eAAsD,KAAvB5I,KAAK4I,eAC9B,OAA1C5I,KAAK4I,cAAchD,oBAA+B5F,KAAK4I,cAAchD,qBACrE5F,KAAK6C,OAAOoG,OACTC,WAAU,SAACC,GACNA,aAAiBC,EAAAA,eACnBrJ,EAAKsJ,gBAAgBF,EAAMG,QAGjCtJ,KAAKqJ,gBAAgBrJ,KAAK6C,OAAOyG,OAGrCX,EAAAxJ,UAAAkK,gBAAA,SAAgBC,GACd,IAAMC,EAAYvJ,KAAK8C,sBAAsB7B,sBAAsBjB,KAAKK,MAAOiJ,QAE/DlJ,IAAdmJ,QACmBnJ,IAAnBmJ,EAAU5I,MACS,OAAnB4I,EAAU5I,MACS,KAAnB4I,EAAU5I,OAGVX,KAAKwI,YAAce,EACnBvJ,KAAKoG,iBAAiBmD,KAG1BZ,EAAAxJ,UAAAqK,eAAA,WAC4B,IAAtBxJ,KAAKK,MAAMT,OACb6J,QAAQC,KAAKzK,IAEbe,KAAKK,MAAQL,KAAKK,MAAMoD,QAAO,SAAAC,GAAK,OAACA,EAAEC,UACvC3D,KAAK8C,sBAAsBjD,YAAYG,KAAKK,SAGhDsI,EAAAxJ,UAAA6J,oBAAA,WACE,GAA2B,OAAvBhJ,KAAK4I,oBAAiDxI,IAAvBJ,KAAK4I,eAAsD,KAAvB5I,KAAK4I,cAC1E5I,KAAK+I,iBAAkB,MAClB,CACL/I,KAAK+I,iBAAkB,EACvB,IAAMY,EAAS3J,KAAK4I,mBACUxI,IAA1BuJ,EAAOrF,gBAA0D,OAA1BqF,EAAOrF,gBAA4D,kBAA1BqF,EAAOrF,iBACzFtE,KAAK8I,WAAWxE,eAAiBqF,EAAOrF,gBAEP,KAA/BqF,EAAOjF,qBACsB,OAA/BiF,EAAOjF,0BACwBtE,IAA/BuJ,EAAOjF,sBACP1E,KAAK8I,WAAWpE,oBAAsBiF,EAAOjF,qBAEtB,KAArBiF,EAAO/E,WACY,OAArB+E,EAAO/E,gBACcxE,IAArBuJ,EAAO/E,YACP5E,KAAK8I,WAAWlE,UAAY+E,EAAO/E,WAEA,KAAjC+E,EAAOhF,uBACwB,OAAjCgF,EAAOhF,4BAC0BvE,IAAjCuJ,EAAOhF,wBACP3E,KAAK8I,WAAWnE,sBAAwBgF,EAAOhF,uBAEf,OAA9BgF,EAAO/D,yBACqBxF,IAA9BuJ,EAAO/D,oBAC8B,kBAA9B+D,EAAO/D,qBACd5F,KAAK8I,WAAWlD,mBAAqB+D,EAAO/D,oBAEd,OAA5B+D,EAAOvF,uBACmBhE,IAA5BuJ,EAAOvF,kBAC4B,kBAA5BuF,EAAOvF,mBACdpE,KAAK8I,WAAW1E,iBAAmBuF,EAAOvF,kBAEX,OAA7BuF,EAAOxF,wBACoB/D,IAA7BuJ,EAAOxF,mBAC6B,kBAA7BwF,EAAOxF,oBACdnE,KAAK8I,WAAW3E,kBAAoBwF,EAAOxF,mBAEpB,OAArBwF,EAAOjE,gBACYtF,IAArBuJ,EAAOjE,WACqB,kBAArBiE,EAAOjE,YACd1F,KAAK8I,WAAWpD,UAAYiE,EAAOjE,WAErC1F,KAAKwJ,mBAGTb,EAAAxJ,UAAAyK,aAAA,WACE,OAAI5J,KAAK+I,gBACA9J,EAE8B,KAAjCe,KAAK4I,cAAciB,WAAqD,OAAjC7J,KAAK4I,cAAciB,gBAAuDzJ,IAAjCJ,KAAK4I,cAAciB,UAC3F5K,EAA2B,IAAIe,KAAK4I,cAAciB,UAErD5K,GAIb0J,EAAAxJ,UAAAsJ,eAAA,WACE,IAAKzI,KAAK+I,gBAAiB,CACzB,IAAMxE,EAAS,CACbC,WAAa,MAOf,MAL2C,KAAvCxE,KAAK4I,cAAckB,iBACkB,OAAvC9J,KAAK4I,cAAckB,sBACoB1J,IAAvCJ,KAAK4I,cAAckB,kBACnBvF,EAAOC,WAAaxE,KAAK4I,cAAckB,iBAElCvF,IAGXoE,EAAAxJ,UAAAuD,YAAA,WACE,OAAO1C,KAAK8I,WAAWpD,WAEzBiD,EAAAxJ,UAAAiH,iBAAA,SAAiB+C,GACfnJ,KAAKwI,YAAcW,OACC/I,IAAhB+I,EAAM9I,OAAyB8I,EAAMhD,YAA0C,mBAArBgD,EAAMhD,WAGlEnG,KAAK6I,cAAcxC,KAAK8C,GAFxBnJ,KAAKiD,aAAaoD,KAAK8C,qCAvIhBR,GAAiCrC,EAAAC,kBAAA1D,EAAA2D,QAAAF,EAAAC,kBAAArH,sCAAjCyJ,EAAiClC,UAAA,CAAA,CAAA,gCAAAC,OAAA,CAAArG,MAAA,QAAAuI,cAAA,iBAAAjC,QAAA,CAAA1D,aAAA,eAAA4F,cAAA,iBAAAjC,SAAA,CAAAN,EAAAO,sBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,UAAA,MAAA,EAAA,QAAA,CAAA,EAAA,UAAA,UAAA,OAAA,CAAA,EAAA,oBAAA,OAAA,QAAA,eAAA,eAAA,eAAA,EAAA,QAAA,WAAA,CAAA,EAAA,oBAAA,OAAA,QAAA,eAAA,eAAA,iBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GDb9CpF,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,QAA6DJ,EAAAA,WAAAA,OAAAA,IAAAA,EAAAA,MAAAA,+yBEQ7D,SAAAqI,4CASaA,iEAAAA,IAA8B5B,QAAA,CARhC,CACP6B,EAAAA,aACA9B,EACA+B,EAAAA,uFAKSF,EAA8B,CAAAG,aAAA,CAH1BvB,EAAmC/F,GAAiBuF,QAAA,CAJjE6B,EAAAA,aACA9B,EACA+B,EAAAA,cAAYvB,QAAA,CAGJC","sourcesContent":["export const CONSTANT = {\n    PADDING_AT_START: true,\n    DEFAULT_CLASS_NAME: `amml-container`,\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\n};\n","import { Injectable } from '@angular/core';\nimport { MultilevelNodes } from './app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultilevelMenuService {\n  foundLinkObject: MultilevelNodes;\n  generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  recursiveCheckLink(nodes: MultilevelNodes[], link: string): void {\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\n      const node = nodes[nodeIndex];\n      for (const key in node) {\n        if (node.hasOwnProperty(key)) {\n          if (encodeURI(node.link) === link) {\n            this.foundLinkObject = node;\n          } else {\n            if (node.items !== undefined) {\n              this.recursiveCheckLink(node.items, link);\n            }\n          }\n        }\n      }\n    }\n  }\n  getMatchedObjectByUrl(node: MultilevelNodes[], link: string): MultilevelNodes {\n    this.recursiveCheckLink(node, link);\n    return this.foundLinkObject;\n  }\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\n  // https://angular.io/api/common/KeyValuePipe#description\n  kvDummyComparerFn() {\n    return 0;\n  }\n}\n","<mat-list-item matRipple [matRippleDisabled]=\"node.disabled\" [ngClass]=\"selectedListClasses\" *ngIf=\"!node.hidden\"\n  (click)=\"expand(node)\" title=\"{{node.label}}\"\n  [ngStyle]=\"getListStyle()\">\n  <div class=\"anml-data\" [dir]=\"isRtlLayout() ? 'rtl' : 'ltr'\">\n    <a [routerLink]=\"node.link\" class=\"menu-link\">\n      <div class=\"icon-container\" [ngSwitch]=\"getListIcon(node)\">\n        <span *ngSwitchCase=\"'faicon'\" class=\"amml-icon amml-icon-fa\">\n          <i [ngClass]=\"getSelectedFaIcon()\"></i>\n        </span>\n        <mat-icon *ngSwitchCase=\"'icon'\" class=\"amml-icon\">\n          {{getSelectedIcon()}}\n        </mat-icon>\n        <mat-icon *ngSwitchCase=\"'svgicon'\" svgIcon=\"{{getSelectedSvgIcon()}}\" class=\"amml-icon amml-svg-icon\">\n        </mat-icon>\n        <img matListAvatar *ngSwitchCase=\"'imageicon'\" class=\"amml-icon\" src=\"{{getSelectedImageIcon()}}\" alt=\"{{node.label}}\"/>\n      </div>\n    </a>\n    <span class=\"label\">{{node.label}}</span>\n  </div>\n  <div class=\"amml-icon-arrow-container\" *ngIf='hasItems()'>\n    <mat-icon *ngIf='!isRtlLayout()' [@isExpandedLTR]=\"expanded ? 'yes' : 'no'\">\n      keyboard_arrow_down\n    </mat-icon>\n    <mat-icon *ngIf='isRtlLayout()'  [@isExpandedRTL]=\"expanded ? 'yes' : 'no'\">\n      keyboard_arrow_down\n    </mat-icon>\n  </div>\n</mat-list-item>\n\n<mat-divider></mat-divider>\n\n<div *ngIf=\"hasItems() && expanded\" [@slideInOut] [dir]=\"isRtlLayout() ? 'rtl' : 'ltr'\" [ngClass]=\"classes\">\n  <ng-list-item *ngFor=\"let singleNode of nodeChildren | keyvalue : multilevelMenuService.kvDummyComparerFn\"\n    [nodeConfiguration]='nodeConfiguration'\n    [node]=\"singleNode.value\"\n    [level]=\"level + 1\"\n    [submenuLevel]=\"singleNode.key\"\n    [selectedNode]='selectedNode'\n    (selectedItem)=\"selectedListItem($event)\">\n  </ng-list-item>\n</div>\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Configuration, ListStyle, MultilevelNodes } from './../app.model';\nimport { CONSTANT } from './../constants';\nimport { MultilevelMenuService } from './../multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({ height: '*', opacity: 0 })),\n      transition(':leave', [\n        style({ height: '*', opacity: 0.2 }),\n        group([\n          animate(200, style({ height: 0 })),\n          animate('200ms ease-out', style({ opacity: 0 }))\n        ])\n      ]),\n      transition(':enter', [\n        style({ height: '0', opacity: 0 }),\n        group([\n          animate(200, style({ height: '*' })),\n          animate('400ms ease-out', style({ opacity: 1 }))\n        ])\n      ])\n    ]),\n    trigger('isExpandedLTR', [\n      state('no', style({ transform: 'rotate(-90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ]),\n    trigger('isExpandedRTL', [\n      state('no', style({ transform: 'rotate(90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ])\n  ]\n})\nexport class ListItemComponent implements OnChanges, OnInit {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() submenuLevel = 0;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  isSelected = false;\n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  expanded = false;\n  firstInitializer = false;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\n    }\n  }\n  ngOnInit() {\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\n\n    if (this.node.faIcon !== null &&\n      this.node.faIcon !== undefined &&\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\n      this.node.faIcon = `fas ${this.node.faIcon}`;\n    }\n\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\n    if (typeof this.node.expanded === 'boolean') {\n      this.expanded = this.node.expanded;\n    }\n    this.setClasses();\n  }\n  setSelectedClass(isFound: boolean): void {\n    if (isFound) {\n      if (!this.firstInitializer) {\n        this.expanded = true;\n      }\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\n    } else {\n      this.isSelected = false;\n      if (this.nodeConfiguration.collapseOnSelect) {\n        this.expanded = false;\n      }\n    }\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\n    };\n    this.setClasses();\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  getListIcon(node: MultilevelNodes): string {\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\n      return `icon`;\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\n      return `faicon`;\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\n      return `imageicon`;\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\n      return `svgicon`;\n    } else {\n      return ``;\n    }\n  }\n  getSelectedSvgIcon() {\n    if (this.isSelected && this.node.activeSvgIcon) {\n      return this.node.activeSvgIcon;\n    }\n    return this.node.svgIcon;\n  }\n  getSelectedIcon() {\n    if (this.isSelected && this.node.activeIcon) {\n      return this.node.activeIcon;\n    }\n    return this.node.icon;\n  }\n  getSelectedFaIcon() {\n    if (this.isSelected && this.node.activeFaIcon) {\n      return this.node.activeFaIcon;\n    }\n    return this.node.faIcon;\n  }\n  getSelectedImageIcon() {\n    if (this.isSelected && this.node.activeImageIcon) {\n      return this.node.activeImageIcon;\n    }\n    return this.node.imageIcon;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfiguration.rtlLayout;\n  }\n  setClasses(): void {\n    this.classes = {\n      [`level-${this.level + 1}`]: true,\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\n    };\n  }\n  expand(node: MultilevelNodes): void {\n    if (node.disabled) {\n      return;\n    }\n    this.expanded = !this.expanded;\n    this.firstInitializer = true;\n    this.setClasses();\n    if (this.nodeConfiguration.interfaceWithRoute !== null\n      && this.nodeConfiguration.interfaceWithRoute\n      && node.link !== undefined\n      && node.link\n    ) {\n      if (node.externalRedirect !== undefined && node.externalRedirect) {\n        window.location.href = node.link;\n      } else {\n        this.router.navigate([node.link], node.navigationExtras);\n      }\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\n      node.onSelected(node);\n      this.selectedListItem(node);\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\n      this.selectedListItem(node);\n    }\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ],\n  declarations: [],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ]\n})\nexport class MaterialsModule { }\n","<div [ngClass]=\"getClassName()\" [ngStyle]=\"getGlobalStyle()\" *ngIf='items.length !== 0' [dir]=\"isRtlLayout() ? 'rtl' : 'ltr'\">\n  <mat-list>\n    <ng-list-item\n      *ngFor=\"let node of items | keyvalue: multilevelMenuService.kvDummyComparerFn\"\n      [nodeConfiguration]='nodeConfig'\n      [node]='node.value'\n      [level]=\"1\"\n      [submenuLevel]=\"node.key\"\n      [selectedNode]='currentNode'\n      (selectedItem)=\"selectedListItem($event)\n    \">\n    </ng-list-item>\n  </mat-list>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BackgroundStyle, Configuration, MultilevelNodes } from './app.model';\nimport { CONSTANT } from './constants';\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  templateUrl: './ng-material-multilevel-menu.component.html',\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\n  currentNode: MultilevelNodes;\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null,\n    interfaceWithRoute: null,\n    collapseOnSelect: null,\n    highlightOnSelect: false,\n    rtlLayout: false,\n  };\n  isInvalidConfig = true;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnChanges() {\n    this.detectInvalidConfig();\n  }\n  ngOnInit() {\n    if (\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\n      this.router.events\n        .subscribe((event) => {\n          if (event instanceof NavigationEnd) {\n            this.updateNodeByURL(event.url);\n          }\n        });\n      this.updateNodeByURL(this.router.url);\n    }\n  }\n  updateNodeByURL(url: string): void {\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\n    if (\n      foundNode !== undefined &&\n      foundNode.link !== undefined &&\n      foundNode.link !== null &&\n      foundNode.link !== ''\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\n    ) {\n      this.currentNode = foundNode;\n      this.selectedListItem(foundNode);\n    }\n  }\n  checkValidData(): void {\n    if (this.items.length === 0) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n      if (config.interfaceWithRoute !== null &&\n        config.interfaceWithRoute !== undefined &&\n        typeof config.interfaceWithRoute === 'boolean') {\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\n      }\n      if (config.collapseOnSelect !== null &&\n        config.collapseOnSelect !== undefined &&\n        typeof config.collapseOnSelect === 'boolean') {\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\n      }\n      if (config.highlightOnSelect !== null &&\n        config.highlightOnSelect !== undefined &&\n        typeof config.highlightOnSelect === 'boolean') {\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\n      }\n      if (config.rtlLayout !== null &&\n        config.rtlLayout !== undefined &&\n        typeof config.rtlLayout === 'boolean') {\n        this.nodeConfig.rtlLayout = config.rtlLayout;\n      }\n      this.checkValidData();\n    }\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfig.rtlLayout;\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.currentNode = event;\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\n      this.selectedItem.emit(event);\n    } else {\n      this.selectedLabel.emit(event);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { MaterialsModule } from './materials.module';\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    RouterModule,\n  ],\n  declarations: [NgMaterialMultilevelMenuComponent, ListItemComponent],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule { }\n"]}