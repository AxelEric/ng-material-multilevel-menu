{"version":3,"sources":["../../../projects/ng-material-multilevel-menu/src/lib/app.model.ts","../../../projects/ng-material-multilevel-menu/src/lib/constants.ts","../../../projects/ng-material-multilevel-menu/src/lib/multilevel-menu.service.ts","../../projects/ng-material-multilevel-menu/src/lib/list-item/list-item.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/materials.module.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.module.ts"],"names":["ExpandCollapseStatusEnum","CONSTANT","MultilevelMenuService","this","expandCollapseStatus","Subject","expandCollapseStatus$","asObservable","selectedMenuID","selectedMenuID$","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","forEach","node","id","undefined","items","recursiveCheckId","nodeId","some","nestedNode","findNodeRecursively","_a","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","getMatchedObjectById","console","log","kvDummyComparerFn","setMenuExapandCollpaseStatus","status","next","neutral","selectMenuByID","menuID","Injectable","args","providedIn","ListItemComponent","router","multilevelMenuService","level","submenuLevel","nodeConfiguration","nodeExpandCollapseStatus","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","selectedListClasses","ngOnChanges","nodeChildren","filter","n","hidden","selectedNode","setSelectedClass","setExpandCollapseStatus","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","getListStyle","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","getHrefTargetType","hrefTargetType","hasItems","isRtlLayout","rtlLayout","classes","expand","collapse","interfaceWithRoute","navigate","navigationExtras","onSelected","selectedListItem","emit","Component","selector","template","animations","trigger","state","style","height","opacity","transition","group","animate","transform","Router","Input","Output","NgModule","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","NgMaterialMultilevelMenuComponent","configuration","selectedLabel","expandCollapseStatusSubscription","selectMenuByIDSubscription","nodeConfig","useDividers","isInvalidConfig","detectInvalidConfig","initExpandCollapseStatus","initSelectedMenuID","events","subscribe","event","NavigationEnd","updateNodeByURL","urlAfterRedirects","url","foundNode","currentNode","dontEmit","checkValidData","warn","config","getClassName","classname","getGlobalStyle","backgroundColor","ngOnDestroy","unsubscribe","CommonModule","MaterialsModule","RouterModule"],"mappings":"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","sourcesContent":["import { NavigationExtras } from '@angular/router';\n\nexport interface MultilevelNodes {\n  id?: string;\n  label: string;\n  faIcon?: string;\n  icon?: string;\n  imageIcon?: string;\n  svgIcon?: string;\n  activeFaIcon?: string;\n  activeIcon?: string;\n  activeImageIcon?: string;\n  activeSvgIcon?: string;\n  hidden?: boolean;\n  link?: string;\n  externalRedirect?: boolean;\n  hrefTargetType?: string;\n  data?: any;\n  items?: MultilevelNodes[];\n  onSelected?: Function;\n  disabled?: boolean;\n  expanded?: boolean;\n  navigationExtras?: NavigationExtras;\n  dontEmit: true;\n}\n\nexport interface Configuration {\n    classname?: string;\n    paddingAtStart?: boolean;\n    backgroundColor?: string;\n    listBackgroundColor?: string;\n    fontColor?: string;\n    selectedListFontColor?: string;\n    interfaceWithRoute?: boolean;\n    collapseOnSelect?: boolean;\n    highlightOnSelect?: boolean;\n    useDividers?: boolean;\n    rtlLayout?: boolean;\n}\n\nexport interface BackgroundStyle {\n    background: string;\n}\n\nexport interface ListStyle {\n    background: string;\n    color: string;\n}\n\nexport enum ExpandCollapseStatusEnum {\n    expand = 'expand',\n    collapse = 'collapse',\n    neutral = 'neutral',\n}\n","export const CONSTANT = {\n    PADDING_AT_START: true,\n    DEFAULT_CLASS_NAME: `amml-container`,\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\n    DEFAULT_HREF_TARGET_TYPE: '_self',\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\n};\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultilevelMenuService {\n  foundLinkObject: MultilevelNodes;\n  expandCollapseStatus: Subject<ExpandCollapseStatusEnum> = new Subject<ExpandCollapseStatusEnum>();\n  expandCollapseStatus$: Observable<ExpandCollapseStatusEnum> = this.expandCollapseStatus.asObservable();\n\n  selectedMenuID: Subject<string> = new Subject<string>();\n  selectedMenuID$: Observable<string> = this.selectedMenuID.asObservable();\n\n  private generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  private findNodeRecursively({nodes, link, id}: {nodes: MultilevelNodes[], link?: string, id?: string}): void {\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\n      const node = nodes[nodeIndex];\n      for (const key in node) {\n        if (node.hasOwnProperty(key)) {\n          if (encodeURI(node.link) === link) {\n            this.foundLinkObject = node;\n          } else if (node.id === id) {\n            this.foundLinkObject = node;\n          } else {\n            if (node.items !== undefined) {\n              this.findNodeRecursively({\n                nodes: node.items,\n                link: link? link: null,\n                id: id? id: null\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n  getMatchedObjectByUrl(nodes: MultilevelNodes[], link: string): MultilevelNodes {\n    this.findNodeRecursively({nodes, link});\n    return this.foundLinkObject;\n  }\n  getMatchedObjectById(nodes: MultilevelNodes[], id: string): MultilevelNodes {\n    console.log(nodes, id)\n    this.findNodeRecursively({nodes, id});\n    return this.foundLinkObject;\n  }\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\n  // https://angular.io/api/common/KeyValuePipe#description\n  kvDummyComparerFn() {\n    return 0;\n  }\n  setMenuExapandCollpaseStatus(status: ExpandCollapseStatusEnum): void {\n    this.expandCollapseStatus.next(status ? status : ExpandCollapseStatusEnum.neutral);\n  }\n  selectMenuByID(menuID: string) {\n    this.selectedMenuID.next(menuID);\n    return this.foundLinkObject;\n  }\n}\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Configuration, ListStyle, MultilevelNodes, ExpandCollapseStatusEnum } from './../app.model';\nimport { CONSTANT } from './../constants';\nimport { MultilevelMenuService } from './../multilevel-menu.service';\n\n\n\n@Component({\n  selector: 'ng-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css'],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({ height: '*', opacity: 0 })),\n      transition(':leave', [\n        style({ height: '*', opacity: 0.2 }),\n        group([\n          animate(200, style({ height: 0 })),\n          animate('200ms ease-out', style({ opacity: 0 }))\n        ])\n      ]),\n      transition(':enter', [\n        style({ height: '0', opacity: 0 }),\n        group([\n          animate(200, style({ height: '*' })),\n          animate('400ms ease-out', style({ opacity: 1 }))\n        ])\n      ])\n    ]),\n    trigger('isExpandedLTR', [\n      state('no', style({ transform: 'rotate(-90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ]),\n    trigger('isExpandedRTL', [\n      state('no', style({ transform: 'rotate(90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(200)\n      ),\n      transition('yes => no',\n        animate(200)\n      )\n    ])\n  ]\n})\nexport class ListItemComponent implements OnChanges, OnInit {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() submenuLevel = 0;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Input() nodeExpandCollapseStatus: ExpandCollapseStatusEnum = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  isSelected = false;\n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  expanded = false;\n  firstInitializer = false;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\n    }\n    this.setExpandCollapseStatus();\n  }\n  ngOnInit() {\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\n\n    if (this.node.faIcon !== null &&\n      this.node.faIcon !== undefined &&\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\n      this.node.faIcon = `fas ${this.node.faIcon}`;\n    }\n\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\n    if (typeof this.node.expanded === 'boolean') {\n      this.expanded = this.node.expanded;\n    }\n    this.setClasses();\n  }\n  setSelectedClass(isFound: boolean): void {\n    if (isFound) {\n      if (!this.firstInitializer) {\n        this.expanded = true;\n      }\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\n    } else {\n      this.isSelected = false;\n      if (this.nodeConfiguration.collapseOnSelect) {\n        this.expanded = false;\n      }\n    }\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\n    };\n    this.setClasses();\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  getListIcon(node: MultilevelNodes): string {\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\n      return `icon`;\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\n      return `faicon`;\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\n      return `imageicon`;\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\n      return `svgicon`;\n    } else {\n      return ``;\n    }\n  }\n  getSelectedSvgIcon() {\n    if (this.isSelected && this.node.activeSvgIcon) {\n      return this.node.activeSvgIcon;\n    }\n    return this.node.svgIcon;\n  }\n  getSelectedIcon() {\n    if (this.isSelected && this.node.activeIcon) {\n      return this.node.activeIcon;\n    }\n    return this.node.icon;\n  }\n  getSelectedFaIcon() {\n    if (this.isSelected && this.node.activeFaIcon) {\n      return this.node.activeFaIcon;\n    }\n    return this.node.faIcon;\n  }\n  getSelectedImageIcon() {\n    if (this.isSelected && this.node.activeImageIcon) {\n      return this.node.activeImageIcon;\n    }\n    return this.node.imageIcon;\n  }\n  getHrefTargetType() {\n    if (this.node.hrefTargetType) {\n      return this.node.hrefTargetType;\n    }\n    return CONSTANT.DEFAULT_HREF_TARGET_TYPE;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfiguration.rtlLayout;\n  }\n  setClasses(): void {\n    this.classes = {\n      [`level-${this.level + 1}`]: true,\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\n    };\n  }\n  setExpandCollapseStatus(): void {\n    if (this.nodeExpandCollapseStatus !== null && this.nodeExpandCollapseStatus !== undefined ) {\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.expand) {\n        this.expanded = true;\n      }\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.collapse) {\n        this.expanded = false;\n      }\n    }\n  }\n  expand(node: MultilevelNodes): void {\n    if (node.disabled) {\n      return;\n    }\n    this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    this.expanded = !this.expanded;\n    this.firstInitializer = true;\n    this.setClasses();\n    if (this.nodeConfiguration.interfaceWithRoute !== null\n      && this.nodeConfiguration.interfaceWithRoute\n      && node.link !== undefined\n      && node.link\n    ) {\n      this.router.navigate([node.link], node.navigationExtras);\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\n      node.onSelected(node);\n      this.selectedListItem(node);\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\n      this.selectedListItem(node);\n    }\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ],\n  declarations: [],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ]\n})\nexport class MaterialsModule { }\n","import { Component, EventEmitter, Input, OnChanges, OnInit, OnDestroy, Output } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { BackgroundStyle, Configuration, MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\nimport { CONSTANT } from './constants';\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  templateUrl: './ng-material-multilevel-menu.component.html',\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\n  expandCollapseStatusSubscription: Subscription = null;\n  selectMenuByIDSubscription: Subscription = null;\n  currentNode: MultilevelNodes;\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null,\n    interfaceWithRoute: null,\n    collapseOnSelect: null,\n    highlightOnSelect: false,\n    useDividers: true,\n    rtlLayout: false,\n  };\n  isInvalidConfig = true;\n  nodeExpandCollapseStatus: ExpandCollapseStatusEnum = ExpandCollapseStatusEnum.neutral;\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnChanges() {\n    this.detectInvalidConfig();\n    this.initExpandCollapseStatus();\n    this.initSelectedMenuID();\n  }\n  ngOnInit() {\n    if (\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\n      this.router.events\n        .subscribe((event) => {\n          if (event instanceof NavigationEnd) {\n            this.updateNodeByURL(event.urlAfterRedirects);\n          }\n        });\n      this.updateNodeByURL(this.router.url);\n    }\n  }\n  updateNodeByURL(url: string): void {\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\n    if (\n      foundNode !== undefined &&\n      foundNode.link !== undefined &&\n      foundNode.link !== null &&\n      foundNode.link !== ''\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\n    ) {\n      this.currentNode = foundNode;\n      if(foundNode.dontEmit !== undefined && foundNode.dontEmit !== null && !foundNode.dontEmit) {\n        this.selectedListItem(foundNode);\n      }\n    }\n  }\n  checkValidData(): void {\n    if (this.items.length === 0) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n      if (config.interfaceWithRoute !== null &&\n        config.interfaceWithRoute !== undefined &&\n        typeof config.interfaceWithRoute === 'boolean') {\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\n      }\n      if (config.collapseOnSelect !== null &&\n        config.collapseOnSelect !== undefined &&\n        typeof config.collapseOnSelect === 'boolean') {\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\n      }\n      if (config.highlightOnSelect !== null &&\n        config.highlightOnSelect !== undefined &&\n        typeof config.highlightOnSelect === 'boolean') {\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\n      }\n      if (config.useDividers !== null &&\n        config.useDividers !== undefined &&\n        typeof config.useDividers === 'boolean') {\n        this.nodeConfig.useDividers = config.useDividers;\n      }\n      if (config.rtlLayout !== null &&\n        config.rtlLayout !== undefined &&\n        typeof config.rtlLayout === 'boolean') {\n        this.nodeConfig.rtlLayout = config.rtlLayout;\n      }\n    }\n    this.checkValidData();\n  }\n  initExpandCollapseStatus(): void {\n    this.expandCollapseStatusSubscription = this.multilevelMenuService.expandCollapseStatus$.subscribe( (expandCollapseStatus: ExpandCollapseStatusEnum) => {\n      this.nodeExpandCollapseStatus = expandCollapseStatus ? expandCollapseStatus : ExpandCollapseStatusEnum.neutral;\n    }, () => {\n      this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    });\n  }\n  initSelectedMenuID(): void {\n    this.selectMenuByIDSubscription = this.multilevelMenuService.selectedMenuID$.subscribe( (selectedMenuID: string) => {\n      if(selectedMenuID) {\n        const foundNode = this.multilevelMenuService.getMatchedObjectById(this.items, selectedMenuID);\n        console.log(selectedMenuID, foundNode)\n        if (foundNode !== undefined) {\n          this.currentNode = foundNode;\n          // this.selectedListItem(foundNode);\n        }\n      }\n    });\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfig.rtlLayout;\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    this.currentNode = event;\n    if(event.dontEmit !== undefined && event.dontEmit !== null && event.dontEmit) {\n      return;\n    }\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\n      this.selectedItem.emit(event);\n    } else {\n      this.selectedLabel.emit(event);\n    }\n  }\n  ngOnDestroy() {\n    this.expandCollapseStatusSubscription.unsubscribe();\n    this.selectMenuByIDSubscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { MaterialsModule } from './materials.module';\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    RouterModule,\n  ],\n  declarations: [\n    NgMaterialMultilevelMenuComponent,\n    ListItemComponent,\n  ],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule {}\n"]}