{"version":3,"sources":["ng://ng-material-multilevel-menu/lib/constants.ts","ng://ng-material-multilevel-menu/lib/multilevel-menu.service.ts","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.html","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.ts","ng://ng-material-multilevel-menu/lib/materials.module.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.html","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.module.ts"],"names":["CONSTANT","MultilevelMenuService","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","this","forEach","node","id","undefined","items","recursiveCheckId","nodeId","some","nestedNode","recursiveCheckLink","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","kvDummyComparerFn","factory","ɵfac","providedIn","i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","ctx_r0","selectedListClasses","getListStyle","i0.ɵɵadvance","singleNode_r10","value","ctx_r9","level","selectedNode","ctx_r1","isRtlLayout","classes","i0.ɵɵelement","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","ListItemComponent","router","multilevelMenuService","submenuLevel","nodeConfiguration","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","_a","ngOnChanges","nodeChildren","filter","n","hidden","setSelectedClass","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","hasItems","rtlLayout","expand","interfaceWithRoute","externalRedirect","window","location","href","navigate","navigationExtras","onSelected","selectedListItem","emit","core","ɵɵdirectiveInject","Router","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","RouterLinkWithHref","common","NgSwitch","NgSwitchCase","MatIcon","list","MatListAvatarCssMatStyler","pipes","KeyValuePipe","data","animation","trigger","state","style","height","opacity","transition","group","animate","transform","MaterialsModule","imports","MatIconModule","MatListModule","MatRippleModule","node_r2","currentNode","getGlobalStyle","exports","NgMaterialMultilevelMenuComponent","configuration","selectedLabel","nodeConfig","isInvalidConfig","detectInvalidConfig","events","subscribe","event","NavigationEnd","updateNodeByURL","url","foundNode","checkValidData","console","warn","config","getClassName","classname","backgroundColor","NgMaterialMultilevelMenuModule","CommonModule","RouterModule","declarations"],"mappings":"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","sourcesContent":["export const CONSTANT = {\r\n    PADDING_AT_START: true,\r\n    DEFAULT_CLASS_NAME: `amml-container`,\r\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\r\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\r\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\r\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\r\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\r\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\r\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\r\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { MultilevelNodes } from './app.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MultilevelMenuService {\r\n  foundLinkObject: MultilevelNodes;\r\n  generateId(): string {\r\n    let text = '';\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < 20; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n  addRandomId(nodes: MultilevelNodes[]): void {\r\n    nodes.forEach((node: MultilevelNodes) => {\r\n      node.id = this.generateId();\r\n      if (node.items !== undefined) {\r\n        this.addRandomId(node.items);\r\n      }\r\n    });\r\n  }\r\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\r\n    if (node.id === nodeId) {\r\n      return true;\r\n    } else {\r\n      if (node.items !== undefined) {\r\n        return node.items.some((nestedNode: MultilevelNodes) => {\r\n          return this.recursiveCheckId(nestedNode, nodeId);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  recursiveCheckLink(nodes: MultilevelNodes[], link: string): void {\r\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\r\n      const node = nodes[nodeIndex];\r\n      for (const key in node) {\r\n        if (node.hasOwnProperty(key)) {\r\n          if (encodeURI(node.link) === link) {\r\n            this.foundLinkObject = node;\r\n          } else {\r\n            if (node.items !== undefined) {\r\n              this.recursiveCheckLink(node.items, link);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getMatchedObjectByUrl(node: MultilevelNodes[], link: string): MultilevelNodes {\r\n    this.recursiveCheckLink(node, link);\r\n    return this.foundLinkObject;\r\n  }\r\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\r\n  // https://angular.io/api/common/KeyValuePipe#description\r\n  kvDummyComparerFn() {\r\n    return 0;\r\n  }\r\n}\r\n","<mat-list-item matRipple \r\n  *ngIf=\"!node.hidden\"\r\n  title=\"{{node.label}}\"\r\n  [matRippleDisabled]=\"node.disabled\" \r\n  [ngClass]=\"selectedListClasses\"\r\n  [ngStyle]=\"getListStyle()\"\r\n  (click)=\"expand(node)\">\r\n  <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n</mat-list-item>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<div *ngIf=\"hasItems() && expanded\" [@slideInOut] [dir]=\"isRtlLayout() ? 'rtl' : 'ltr'\" [ngClass]=\"classes\">\r\n  <ng-list-item *ngFor=\"let singleNode of nodeChildren | keyvalue : multilevelMenuService.kvDummyComparerFn\"\r\n    [nodeConfiguration]='nodeConfiguration' \r\n    [node]=\"singleNode.value\" \r\n    [level]=\"level + 1\"\r\n    [submenuLevel]=\"singleNode.key\"\r\n    [selectedNode]='selectedNode' \r\n    (selectedItem)=\"selectedListItem($event)\">\r\n  </ng-list-item>\r\n</div>\r\n\r\n<ng-template #linkTemplate>\r\n  <a class=\"anml-link\" *ngIf=\"node.externalRedirect\" [href]=\"node.link\">\r\n    <ng-container *ngTemplateOutlet=\"linkLabelOutlet\"></ng-container>\r\n  </a>\r\n  <a class=\"anml-link\" *ngIf=\"!node.externalRedirect\" [routerLink]=\"node.link\">\r\n    <ng-container *ngTemplateOutlet=\"linkLabelOutlet\"></ng-container>\r\n  </a>\r\n</ng-template>\r\n\r\n<ng-template #linkLabelOutlet>\r\n  <div class=\"anml-data\" [dir]=\"isRtlLayout() ? 'rtl' : 'ltr'\">\r\n    <div class=\"icon-container\" [ngSwitch]=\"getListIcon(node)\">\r\n      <span *ngSwitchCase=\"'faicon'\" class=\"amml-icon amml-icon-fa\">\r\n        <i [ngClass]=\"getSelectedFaIcon()\"></i>\r\n      </span>\r\n      <mat-icon *ngSwitchCase=\"'icon'\" class=\"amml-icon\">\r\n        {{getSelectedIcon()}}\r\n      </mat-icon>\r\n      <mat-icon *ngSwitchCase=\"'svgicon'\" svgIcon=\"{{getSelectedSvgIcon()}}\" class=\"amml-icon amml-svg-icon\">\r\n      </mat-icon>\r\n      <img matListAvatar *ngSwitchCase=\"'imageicon'\" class=\"amml-icon\" src=\"{{getSelectedImageIcon()}}\"\r\n        alt=\"{{node.label}}\" />\r\n    </div>\r\n    <span class=\"label\">{{node.label}}</span>\r\n  </div>\r\n  <div class=\"amml-icon-arrow-container\" *ngIf='hasItems()'>\r\n    <mat-icon *ngIf='!isRtlLayout()' [@isExpandedLTR]=\"expanded ? 'yes' : 'no'\">\r\n      keyboard_arrow_down\r\n    </mat-icon>\r\n    <mat-icon *ngIf='isRtlLayout()' [@isExpandedRTL]=\"expanded ? 'yes' : 'no'\">\r\n      keyboard_arrow_down\r\n    </mat-icon>\r\n  </div>\r\n</ng-template>","import { animate, group, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Configuration, ListStyle, MultilevelNodes } from './../app.model';\r\nimport { CONSTANT } from './../constants';\r\nimport { MultilevelMenuService } from './../multilevel-menu.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ng-list-item',\r\n  templateUrl: './list-item.component.html',\r\n  styleUrls: ['./list-item.component.css'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('in', style({ height: '*', opacity: 0 })),\r\n      transition(':leave', [\r\n        style({ height: '*', opacity: 0.2 }),\r\n        group([\r\n          animate(200, style({ height: 0 })),\r\n          animate('200ms ease-out', style({ opacity: 0 }))\r\n        ])\r\n      ]),\r\n      transition(':enter', [\r\n        style({ height: '0', opacity: 0 }),\r\n        group([\r\n          animate(200, style({ height: '*' })),\r\n          animate('400ms ease-out', style({ opacity: 1 }))\r\n        ])\r\n      ])\r\n    ]),\r\n    trigger('isExpandedLTR', [\r\n      state('no', style({ transform: 'rotate(-90deg)' })),\r\n      state('yes', style({ transform: 'rotate(0deg)', })),\r\n\r\n      transition('no => yes',\r\n        animate(200)\r\n      ),\r\n      transition('yes => no',\r\n        animate(200)\r\n      )\r\n    ]),\r\n    trigger('isExpandedRTL', [\r\n      state('no', style({ transform: 'rotate(90deg)' })),\r\n      state('yes', style({ transform: 'rotate(0deg)', })),\r\n\r\n      transition('no => yes',\r\n        animate(200)\r\n      ),\r\n      transition('yes => no',\r\n        animate(200)\r\n      )\r\n    ])\r\n  ]\r\n})\r\nexport class ListItemComponent implements OnChanges, OnInit {\r\n  @Input() node: MultilevelNodes;\r\n  @Input() level = 1;\r\n  @Input() submenuLevel = 0;\r\n  @Input() selectedNode: MultilevelNodes;\r\n  @Input() nodeConfiguration: Configuration = null;\r\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\r\n  isSelected = false;\r\n  nodeChildren: MultilevelNodes[];\r\n  classes: { [index: string]: boolean };\r\n  selectedListClasses: { [index: string]: boolean };\r\n  expanded = false;\r\n  firstInitializer = false;\r\n  constructor(\r\n    private router: Router,\r\n    public multilevelMenuService: MultilevelMenuService\r\n  ) {\r\n    this.selectedListClasses = {\r\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\r\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\r\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\r\n    };\r\n  }\r\n  ngOnChanges() {\r\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\r\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\r\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\r\n\r\n    if (this.node.faIcon !== null &&\r\n      this.node.faIcon !== undefined &&\r\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\r\n      this.node.faIcon = `fas ${this.node.faIcon}`;\r\n    }\r\n\r\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\r\n    if (typeof this.node.expanded === 'boolean') {\r\n      this.expanded = this.node.expanded;\r\n    }\r\n    this.setClasses();\r\n  }\r\n  setSelectedClass(isFound: boolean): void {\r\n    if (isFound) {\r\n      if (!this.firstInitializer) {\r\n        this.expanded = true;\r\n      }\r\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\r\n    } else {\r\n      this.isSelected = false;\r\n      if (this.nodeConfiguration.collapseOnSelect) {\r\n        this.expanded = false;\r\n      }\r\n    }\r\n    this.selectedListClasses = {\r\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\r\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\r\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\r\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\r\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\r\n    };\r\n    this.setClasses();\r\n  }\r\n  getPaddingAtStart(): boolean {\r\n    return this.nodeConfiguration.paddingAtStart ? true : false;\r\n  }\r\n  getListStyle(): ListStyle {\r\n    const styles = {\r\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\r\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\r\n    };\r\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\r\n      styles.background = this.nodeConfiguration.listBackgroundColor;\r\n    }\r\n    if (this.isSelected) {\r\n      this.nodeConfiguration.selectedListFontColor !== null ?\r\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\r\n    } else if (this.nodeConfiguration.fontColor !== null) {\r\n      styles.color = this.nodeConfiguration.fontColor;\r\n    }\r\n    return styles;\r\n  }\r\n  getListIcon(node: MultilevelNodes): string {\r\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\r\n      return `icon`;\r\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\r\n      return `faicon`;\r\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\r\n      return `imageicon`;\r\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\r\n      return `svgicon`;\r\n    } else {\r\n      return ``;\r\n    }\r\n  }\r\n  getSelectedSvgIcon() {\r\n    if (this.isSelected && this.node.activeSvgIcon) {\r\n      return this.node.activeSvgIcon;\r\n    }\r\n    return this.node.svgIcon;\r\n  }\r\n  getSelectedIcon() {\r\n    if (this.isSelected && this.node.activeIcon) {\r\n      return this.node.activeIcon;\r\n    }\r\n    return this.node.icon;\r\n  }\r\n  getSelectedFaIcon() {\r\n    if (this.isSelected && this.node.activeFaIcon) {\r\n      return this.node.activeFaIcon;\r\n    }\r\n    return this.node.faIcon;\r\n  }\r\n  getSelectedImageIcon() {\r\n    if (this.isSelected && this.node.activeImageIcon) {\r\n      return this.node.activeImageIcon;\r\n    }\r\n    return this.node.imageIcon;\r\n  }\r\n  hasItems(): boolean {\r\n    return this.nodeChildren.length > 0 ? true : false;\r\n  }\r\n  isRtlLayout(): boolean {\r\n    return this.nodeConfiguration.rtlLayout;\r\n  }\r\n  setClasses(): void {\r\n    this.classes = {\r\n      [`level-${this.level + 1}`]: true,\r\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\r\n    };\r\n  }\r\n  expand(node: MultilevelNodes): void {\r\n    if (node.disabled) {\r\n      return;\r\n    }\r\n    this.expanded = !this.expanded;\r\n    this.firstInitializer = true;\r\n    this.setClasses();\r\n    if (this.nodeConfiguration.interfaceWithRoute !== null\r\n      && this.nodeConfiguration.interfaceWithRoute\r\n      && node.link !== undefined\r\n      && node.link\r\n    ) {\r\n      if (node.externalRedirect !== undefined && node.externalRedirect) {\r\n        window.location.href = node.link;\r\n      } else {\r\n        this.router.navigate([node.link], node.navigationExtras);\r\n      }\r\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\r\n      node.onSelected(node);\r\n      this.selectedListItem(node);\r\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\r\n      this.selectedListItem(node);\r\n    }\r\n  }\r\n  selectedListItem(node: MultilevelNodes): void {\r\n    this.selectedItem.emit(node);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ]\r\n})\r\nexport class MaterialsModule { }\r\n","<div [ngClass]=\"getClassName()\" [ngStyle]=\"getGlobalStyle()\" *ngIf='items.length !== 0' [dir]=\"isRtlLayout() ? 'rtl' : 'ltr'\">\r\n  <mat-list>\r\n    <ng-list-item\r\n      *ngFor=\"let node of items | keyvalue: multilevelMenuService.kvDummyComparerFn\"\r\n      [nodeConfiguration]='nodeConfig'\r\n      [node]='node.value'\r\n      [level]=\"1\"\r\n      [submenuLevel]=\"node.key\"\r\n      [selectedNode]='currentNode'\r\n      (selectedItem)=\"selectedListItem($event)\r\n    \">\r\n    </ng-list-item>\r\n  </mat-list>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BackgroundStyle, Configuration, MultilevelNodes } from './app.model';\r\nimport { CONSTANT } from './constants';\r\nimport { MultilevelMenuService } from './multilevel-menu.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ng-material-multilevel-menu',\r\n  templateUrl: './ng-material-multilevel-menu.component.html',\r\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\r\n})\r\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges {\r\n  @Input() items: MultilevelNodes[];\r\n  @Input() configuration: Configuration = null;\r\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\r\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\r\n  currentNode: MultilevelNodes;\r\n  nodeConfig: Configuration = {\r\n    paddingAtStart: true,\r\n    listBackgroundColor: null,\r\n    fontColor: null,\r\n    selectedListFontColor: null,\r\n    interfaceWithRoute: null,\r\n    collapseOnSelect: null,\r\n    highlightOnSelect: false,\r\n    rtlLayout: false,\r\n  };\r\n  isInvalidConfig = true;\r\n  constructor(\r\n    private router: Router,\r\n    public multilevelMenuService: MultilevelMenuService\r\n  ) { }\r\n  ngOnChanges() {\r\n    this.detectInvalidConfig();\r\n  }\r\n  ngOnInit() {\r\n    if (\r\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\r\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\r\n      this.router.events\r\n        .subscribe((event) => {\r\n          if (event instanceof NavigationEnd) {\r\n            this.updateNodeByURL(event.url);\r\n          }\r\n        });\r\n      this.updateNodeByURL(this.router.url);\r\n    }\r\n  }\r\n  updateNodeByURL(url: string): void {\r\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\r\n    if (\r\n      foundNode !== undefined &&\r\n      foundNode.link !== undefined &&\r\n      foundNode.link !== null &&\r\n      foundNode.link !== ''\r\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\r\n    ) {\r\n      this.currentNode = foundNode;\r\n      this.selectedListItem(foundNode);\r\n    }\r\n  }\r\n  checkValidData(): void {\r\n    if (this.items.length === 0) {\r\n      console.warn(CONSTANT.ERROR_MESSAGE);\r\n    } else {\r\n      this.items = this.items.filter(n => !n.hidden);\r\n      this.multilevelMenuService.addRandomId(this.items);\r\n    }\r\n  }\r\n  detectInvalidConfig(): void {\r\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\r\n      this.isInvalidConfig = true;\r\n    } else {\r\n      this.isInvalidConfig = false;\r\n      const config = this.configuration;\r\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\r\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\r\n      }\r\n      if (config.listBackgroundColor !== '' &&\r\n        config.listBackgroundColor !== null &&\r\n        config.listBackgroundColor !== undefined) {\r\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\r\n      }\r\n      if (config.fontColor !== '' &&\r\n        config.fontColor !== null &&\r\n        config.fontColor !== undefined) {\r\n        this.nodeConfig.fontColor = config.fontColor;\r\n      }\r\n      if (config.selectedListFontColor !== '' &&\r\n        config.selectedListFontColor !== null &&\r\n        config.selectedListFontColor !== undefined) {\r\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\r\n      }\r\n      if (config.interfaceWithRoute !== null &&\r\n        config.interfaceWithRoute !== undefined &&\r\n        typeof config.interfaceWithRoute === 'boolean') {\r\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\r\n      }\r\n      if (config.collapseOnSelect !== null &&\r\n        config.collapseOnSelect !== undefined &&\r\n        typeof config.collapseOnSelect === 'boolean') {\r\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\r\n      }\r\n      if (config.highlightOnSelect !== null &&\r\n        config.highlightOnSelect !== undefined &&\r\n        typeof config.highlightOnSelect === 'boolean') {\r\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\r\n      }\r\n      if (config.rtlLayout !== null &&\r\n        config.rtlLayout !== undefined &&\r\n        typeof config.rtlLayout === 'boolean') {\r\n        this.nodeConfig.rtlLayout = config.rtlLayout;\r\n      }\r\n      this.checkValidData();\r\n    }\r\n  }\r\n  getClassName(): string {\r\n    if (this.isInvalidConfig) {\r\n      return CONSTANT.DEFAULT_CLASS_NAME;\r\n    } else {\r\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\r\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\r\n      } else {\r\n        return CONSTANT.DEFAULT_CLASS_NAME;\r\n      }\r\n    }\r\n  }\r\n  getGlobalStyle(): BackgroundStyle {\r\n    if (!this.isInvalidConfig) {\r\n      const styles = {\r\n        background : null\r\n      };\r\n      if (this.configuration.backgroundColor !== '' &&\r\n        this.configuration.backgroundColor !== null &&\r\n        this.configuration.backgroundColor !== undefined) {\r\n        styles.background = this.configuration.backgroundColor;\r\n      }\r\n      return styles;\r\n    }\r\n  }\r\n  isRtlLayout(): boolean {\r\n    return this.nodeConfig.rtlLayout;\r\n  }\r\n  selectedListItem(event: MultilevelNodes): void {\r\n    this.currentNode = event;\r\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\r\n      this.selectedItem.emit(event);\r\n    } else {\r\n      this.selectedLabel.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ListItemComponent } from './list-item/list-item.component';\r\nimport { MaterialsModule } from './materials.module';\r\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    NgMaterialMultilevelMenuComponent,\r\n    ListItemComponent,\r\n  ],\r\n  exports: [NgMaterialMultilevelMenuComponent]\r\n})\r\nexport class NgMaterialMultilevelMenuModule { }\r\n"]}