{"version":3,"file":"ng-material-multilevel-menu.js.map","sources":["ng://ng-material-multilevel-menu/lib/materials.module.ts","ng://ng-material-multilevel-menu/lib/multilevel-menu.service.ts","ng://ng-material-multilevel-menu/lib/constants.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.ts","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatRippleModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ]\r\n})\r\nexport class MaterialsModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Observable } from 'rxjs';\n\nimport { MultilevelNodes } from './app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultilevelMenuService {\n  isLastItemClikedStorage = new BehaviorSubject(false);\n  isLastItemCliked: Observable<boolean> = this.isLastItemClikedStorage.asObservable();\n  generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes, index) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  updateClickedItem(isCliked: boolean) {\n    this.isLastItemClikedStorage.next(isCliked);\n  }\n}\n","export const CONSTANT = {\r\n    PADDING_AT_START: true,\r\n    DEFAULT_CLASS_NAME: `amml-container`,\r\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\r\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\r\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\r\n    DEFAULT_LIST_BACKGROUND_COLOR: `#fff`,\r\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\r\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\r\n};\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\nimport { Configuration, MultilevelNodes, BackgroundStyle } from './app.model';\nimport { CONSTANT } from './constants';\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  template: `<div [ngClass]=\"getClassName()\" [ngStyle]=\"getGlobalStyle()\" *ngIf='items.length !== 0'>\r\n  <mat-list>\r\n    <ng-list-item \r\n      *ngFor=\"let node of items\" \r\n      [nodeConfiguration]='nodeConfig' \r\n      [node]='node' \r\n      [selectedNode]='currentNode' \r\n      (selectedItem)=\"selectedListItem($event)\r\n    \">\r\n    </ng-list-item>\r\n  </mat-list>\r\n</div>`,\n  styles: [`.amml-item{line-height:48px;display:flex;justify-content:space-between;position:relative}.anml-data{width:100%;text-transform:capitalize;display:flex;justify-content:start}.amml-icon{line-height:48px;margin-right:15px}.amml-icon-fa{font-size:20px}.amml-submenu{margin-left:16px}.active{color:#1976d2}`],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  currentNode: MultilevelNodes;\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null\n  };\n  isInvalidConfig = true;\n  isLastItemCliked = false;\n  constructor(\n    private multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnInit() {\n    this.checkValiddata();\n    this.detectInvalidConfig();\n  }\n  checkValiddata(): void {\n    if (this.items.length === 0) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n    }\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.currentNode = event;\n    this.selectedItem.emit(event);\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, transition, animate, state, group } from '@angular/animations';\n\nimport { MultilevelMenuService } from './../multilevel-menu.service';\n\nimport { Configuration, MultilevelNodes, ListStyle } from './../app.model';\nimport { CONSTANT } from './../constants';\n\n@Component({\n  selector: 'ng-list-item',\n  template: `<mat-list-item matRipple [ngClass]=\"selectedListClasses\" *ngIf=\"!node.hidden\" (click)=\"expand(node)\"\n  [ngStyle]=\"getListStyle()\">\n  <div class=\"anml-data\">\n    <span *ngIf=\"node.faIcon\" class=\"amml-icon amml-icon-fa\">\n      <i [ngClass]=\"node.faIcon\"></i>\n    </span>\n    <mat-icon *ngIf=\"node.icon\" class=\"amml-icon\">\n      {{node.icon}}\n    </mat-icon>\n    <span class=\"label\">{{node.label}}</span>\n  </div>\n  <mat-icon *ngIf='hasItems()' [@isExpanded]=\"hasItems() && node.expanded ? 'yes' : 'no'\">\n    keyboard_arrow_down\n  </mat-icon>\n</mat-list-item>\n\n<mat-divider></mat-divider>\n\n<div *ngIf=\"hasItems() && node.expanded\" [@slideInOut] [ngClass]=\"classes\">\n  <ng-list-item *ngFor=\"let singleNode of nodeChildren\" \n    [nodeConfiguration]='nodeConfiguration' \n    [node]='singleNode' \n    [level]=\"level + 1\"\n    [selectedNode]='selectedNode'\n    (selectedItem)=\"selectedListItem($event)\">\n  </ng-list-item>\n</div>\n`,\n  styles: [`.amml-item{line-height:48px;position:relative;cursor:pointer}.anml-data{width:100%;text-transform:capitalize;display:flex;justify-content:start;height:48px}.amml-icon{line-height:48px;margin-right:15px}.amml-icon-fa{font-size:20px}.label{line-height:48px}.amml-submenu{margin-left:16px}`],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({ height: '*', opacity: 0 })),\n      transition(':leave', [\n        style({ height: '*', opacity: 1 }),\n        group([\n          animate(300, style({ height: 0 })),\n          animate('200ms ease-in-out', style({ 'opacity': '0' }))\n        ])\n      ]),\n      transition(':enter', [\n        style({ height: '0', opacity: 0 }),\n        group([\n          animate(300, style({ height: '*' })),\n          animate('400ms ease-in-out', style({ 'opacity': '1' }))\n        ])\n      ])\n    ]),\n    trigger('isExpanded', [\n      state('no', style({ transform: 'rotate(-90deg)' })),\n      state('yes', style({ transform: 'rotate(0deg)', })),\n\n      transition('no => yes',\n        animate(300)\n      ),\n      transition('yes => no',\n        animate(300)\n      )\n    ])\n  ]\n})\nexport class ListItemComponent implements OnChanges {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  isSelected = false;\n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  constructor(\n    private multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    if (this.selectedNode !== undefined) {\n      this.multilevelMenuService.isLastItemCliked.subscribe( (isClicked: boolean) => {\n        if (isClicked) {\n          if (this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id)) {\n            this.isSelected = true;\n          } else {\n            this.isSelected = false;\n          }\n          this.selectedListClasses = {\n            [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n            [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n          };\n        }\n      });\n    }\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  setClasses() {\n    this.classes = {\n      ['level-' + this.level]: true,\n      'amml-submenu': this.hasItems() && this.node.expanded && this.getPaddingAtStart()\n    };\n  }\n  expand(node: MultilevelNodes): void {\n    node.expanded = !node.expanded;\n    if (node.items === undefined) {\n      delete node.expanded;\n      this.selectedListItem(node);\n    }\n    this.setClasses();\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.multilevelMenuService.updateClickedItem(true);\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialsModule } from './materials.module';\n\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\nimport { ListItemComponent } from './list-item/list-item.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule\n  ],\n  declarations: [NgMaterialMultilevelMenuComponent, ListItemComponent],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule { }\n"],"names":[],"mappings":"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"}
